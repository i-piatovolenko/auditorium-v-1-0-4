{"version":3,"sources":["styles/main.module.css","components/layout/sidebar/sidebar.module.css","components/notification/notification.module.css","components/classroom/classroom.module.css","components/logo/logo.module.css","components/popupWindow/popupWindow.module.css","pages/registry/registry.module.css","components/instruments/instruments.module.css","admin/pages/departments/adminDepartments.module.css","pages/schedule/schedule.module.css","admin/pages/classrooms/adminClassrooms.module.css","components/ classroomInfo/occupantInfo/occupantInfo.module.css","components/button/button.module.css","components/dataList/dataList.module.css","admin/pages/classrooms/createClassroomPopupBody/createClassroomPopupBody.module.css","admin/pages/admin/admin.module.css","admin/pages/instruments/adminInstruments.module.css","pages/home/home.module.css","components/icons/edit/edit.module.css","admin/pages/users/adminUsers.module.css","components/headerCheckBox/headerCheckbox.module.css","components/layout/layout.module.css","components/userProfile/userProfile.module.css","admin/pages/classrooms/browseClassroomPopupBody/browseClassroomPopupBody.module.css","components/ classroomInfo/occupantRegistration/occupantRegistration.module.css","components/tag/tag.module.css","pages/classrooms/classrooms.module.css","components/caviar/caviar.module.css","components/layout/content/content.module.css","components/header/header.module.css","components/title/title.module.css","components/scheduleUnit/scheduleUnit.module.css","pages/users/users.module.css","components/loader/loader.module.css","components/icons/add/add.module.css","components/icons/delete/delete.module.css","admin/pages/users/browseUserPopupBody/browseUserPopupBody.module.css","components/ classroomInfo/classroomInfo.module.css","components/tooltip/tooltip.module.css","admin/pages/instruments/createInstrumentPopupBody/createInstrumentPopupBody.module.css","admin/pages/instruments/browseInstrumentPopupBody/browseInstrumentPopupBody.module.css","models/models.ts","components/logo/Logo.tsx","assets/images/menu.svg","assets/images/home.svg","assets/images/classrooms.svg","assets/images/registry.svg","assets/images/schedule.svg","assets/images/profile.svg","assets/images/users.svg","assets/images/settings.svg","api/operations/queries/users.ts","components/layout/sidebar/Sidebar.tsx","pages/home/Home.tsx","components/header/Header.tsx","api/operations/queries/register.ts","components/button/Button.tsx","helpers/helpers.ts","helpers/constants.ts","components/title/Title.tsx","components/userProfile/UserProfile.tsx","components/popupWindow/PopupWindow.tsx","api/client.ts","components/popupWindow/PopupWindowProvider.tsx","pages/registry/Registry.tsx","pages/registry/PDFConfig.ts","api/operations/queries/schedule.ts","components/scheduleUnit/ScheduleUnit.tsx","api/operations/queries/classrooms.ts","pages/schedule/Schedule.tsx","assets/images/edit.svg","components/icons/edit/Edit.tsx","components/headerSelect/selectStyles.ts","components/headerSelect/HeaderSelect.tsx","assets/images/loader.svg","components/loader/Loader.tsx","components/dataList/DataList.tsx","hooks/useUsers.ts","pages/users/Users.tsx","pages/profile/Profile.tsx","hooks/useClassrooms.tsx","api/operations/mutations/createClassroom.ts","styles/selectStyles.ts","api/operations/queries/instruments.ts","hooks/useInstruments.ts","api/operations/queries/departments.ts","hooks/useDepartments.ts","assets/images/addLined.svg","admin/pages/classrooms/createClassroomPopupBody/CreateClassroomPopupBody.tsx","components/notification/Notification.tsx","components/notification/NotificationProvider.tsx","api/operations/mutations/deleteClassroom.ts","assets/images/add.svg","components/icons/add/Add.tsx","assets/images/delete.svg","components/icons/delete/Delete.tsx","admin/pages/classrooms/browseClassroomPopupBody/BrowseClassroomPopupBody.tsx","admin/pages/classrooms/AdminClassrooms.tsx","admin/pages/users/browseUserPopupBody/BrowseUserPopupBody.tsx","admin/pages/users/AdminUsers.tsx","admin/pages/admin/Admin.tsx","assets/images/uprightPiano.svg","assets/images/grandPiano.svg","assets/images/star.svg","components/instruments/Instruments.tsx","components/ classroomInfo/occupantInfo/OccupantInfo.tsx","api/operations/mutations/occupyClassroom.ts","components/ classroomInfo/occupantRegistration/OccupantRegistration.tsx","components/ classroomInfo/ClassroomInfo.tsx","components/tooltip/Tooltip.tsx","components/tag/Tag.tsx","api/operations/mutations/freeClassroom.ts","components/footer/Footer.tsx","assets/images/specialPiano.svg","components/classroom/Classroom.tsx","components/caviar/Caviar.tsx","components/headerCheckBox/HeaderCheckbox.tsx","pages/classrooms/Classrooms.tsx","helpers/filterClassrooms.ts","api/operations/mutations/createInstrument.ts","api/operations/mutations/updateInstrument.ts","admin/pages/instruments/createInstrumentPopupBody/CreateInstrumentPopupBody.tsx","api/operations/mutations/deleteInstrument.ts","admin/pages/instruments/browseInstrumentPopupBody/BrowseInstrumentPopupBody.tsx","admin/pages/instruments/AdminInstruments.tsx","api/operations/queries/faculties.ts","hooks/useFaculties.ts","api/operations/mutations/createDepartment.ts","api/operations/mutations/updateDepartment.ts","admin/pages/departments/createDepartmentPopupBody/CreateDepartmentPopupBody.tsx","api/operations/mutations/deleteDepartment.ts","admin/pages/departments/AdminDepartments.tsx","api/operations/mutations/createFaculty.ts","api/operations/mutations/updateFaculty.ts","admin/pages/faculties/createFacultyPopupBody/CreateFacultyPopupBody.tsx","api/operations/mutations/deleteFaculty.ts","admin/pages/faculties/AdminFaculties.tsx","api/operations/mutations/createDegree.ts","api/operations/mutations/updateDegree.ts","admin/pages/degrees/createDegreePopupBody/CreateDegreePopupBody.tsx","api/operations/queries/degrees.ts","hooks/useDegrees.ts","api/operations/mutations/deleteDegree.ts","admin/pages/degrees/AdminDegrees.tsx","components/layout/content/Content.tsx","components/layout/Layout.tsx","App.tsx","reportWebVitals.ts","index.tsx"],"names":["module","exports","ErrorCodesUa","ErrorCodes","EmploymentTypes","EmploymentTypesUa","UserTypes","UserTypesUa","UserTypeColors","ActivityTypes","NotificationsTypes","ClassroomsFilterTypes","Logo","title","description","size","className","styles","logoWrapper","logo","smallLogo","logoText","logoTitle","smallLogoTitle","logoDescription","GET_USERS","gql","GET_USER_BY_ID","Sidebar","useState","collapsed","setCollapsed","data","useQuery","unverifiedCounter","setUnverifiedCounter","useEffect","users","forEach","user","verified","prevState","onMenuClick","onClick","screenWidth","window","screen","width","toString","navigation","join","menuIcon","src","alt","currentPageName","exact","path","activeClassName","linkActive","link","to","icon","homeIcon","classroomsIcon","registryIcon","scheduleIcon","usersIcon","profileIcon","alert","settings","controlIcon","Home","home","welcome","about","Header","children","header","GET_REGISTER","Button","kind","type","color","disabled","style","undefined","form","button","sizes","getTimeHHMM","date","getHours","formatMinutesToMM","getMinutes","value","fullName","withInitials","lastName","firstName","charAt","patronymic","typeStyle","occupied","student","backgroundColor","STUDENT","POST_GRADUATE","simpleIntFromScheduleUnit","time","split","map","el","index","parseInt","reduce","accumulator","currentValue","getScheduleUnitSize","units","fillEmpty","items","push","from","item","length","ISODateString","d","pad","n","getUTCFullYear","getUTCMonth","getUTCDate","Title","UserProfile","userId","variables","where","id","loading","error","department","href","email","phoneNumber","PopupWindow","body","dispatch","footer","isConfirm","entering","setEntering","onClose","setTimeout","footerWithProps","React","Children","child","isValidElement","cloneElement","bodyWithProps","popupBackground","e","target","currentTarget","modal","confirm","modalHeader","modalClose","modalBody","modalFooter","serverURL","localStorage","getItem","client","ApolloClient","uri","cache","InMemoryCache","typePolicies","Query","fields","isLogged","read","isLoggedVar","isBlurred","isBlurredVar","gridUpdate","meType","makeVar","PopupWindowContext","createContext","usePopupWindow","useContext","props","payload","v4","PopupWindowProvider","useReducer","state","action","slice","Provider","popup","Registry","dispatchPopupWindow","Date","setDate","start","gte","setHours","fetchPolicy","vfs","vfsFonts","pdfMake","registerData","register","unit","end","text","classroom","name","alignment","nameTemp","getFormattedData","registerDate","documentDefinition","pageSize","pageOrientation","content","table","widths","headerRows","dontBreakRows","getDate","getMonth","getFullYear","colSpan","margin","tableHeader","bold","fontSize","subheader","quote","italics","small","getDocumentDefinition","readableDate","onChange","mainStyles","headerDateInput","buttons","createPdf","print","download","wrapper","listHeader","container","noItemsText","userName","handleClick","active","GET_SCHEDULE_UNIT","ScheduleUnit","classroomName","gridTemplateColumns","document","clientWidth","schedule","sort","a","b","scheduleRow","height","activity","border","GET_CLASSROOMS","timePeriods","Schedule","scheduleHeader","space","timeline","classrooms","row","Edit","dark","history","useHistory","editIcon","light","stopPropagation","selectStyles","control","provided","borderRadius","placeholder","menuList","singleValue","indicatorSeparator","display","HeaderSelect","options","defaultValue","Loader","loader","DataList","handleItemClick","columnIndex","setColumnIndex","sortedData","setSortedData","columns","setColumns","aValue","bValue","localeCompare","list","headerRow","useUsers","setUsers","query","then","categories","label","TEACHER","CONCERTMASTER","ILLUSTRATOR","Users","searchValue","setSearchValue","filteredUsers","setFilteredUsers","listData","userType","filter","includes","headerInput","Profile","useClassrooms","setClassrooms","CREATE_CLASSROOM","selectLightStyles","menuPortal","base","zIndex","GET_INSTRUMENTS","useInstruments","updateList","instruments","setInstruments","GET_DEPARTMENTS","useDepartments","departments","setDepartments","CreateClassroomPopupBody","departmentsData","instrumentsData","useMutation","createClassroom","selectedDepartment","setSelectedDepartment","selectedInstruments","setSelectedInstruments","freeInstrumentsOnly","setFreeInstrumentsOnly","useForm","handleSubmit","setValue","errors","watch","formState","dep","chair","filteredInstruments","setMappedInstruments","itemInstruments","persNumber","onSubmit","special","floor","Number","isWing","isOperaStudio","connect","orderIndex","dispatchNotification","message","handleFreeInstruments","required","maxLength","TextArea","showCount","menuPortalTarget","isClearable","isSearchable","noOptionsMessage","defaultChecked","Boolean","min","max","components","DropdownIndicator","addIcon","addInstrumentIcon","MenuList","instrumentsCheckbox","checked","isMulti","Notification","exit","setExit","opacity","setOpacity","intervalId","setIntervalId","handleStartTimer","setInterval","handleCloseNotification","clearInterval","onMouseEnter","onMouseLeave","notification","notificationClose","ok","default","NotificationContext","useNotification","NotificationProvider","notificationWrapper","note","DELETE_CLASSROOM","Add","Delete","deleteIcon","BrowseClassroomPopupBody","AdminClassrooms","setListData","deleteClassroom","centerText","handleCreate","handleDelete","dataItem","handleErrorDetails","extraInfo","stack","console","log","cursor","textDecoration","find","BrowseUserPopupBody","studentInfo","degree","employeeInfo","employmentType","extraPhoneNumbers","JSON","parse","AdminUsers","handleAdd","alignText","toLowerCase","Admin","setItem","unverified","duration","input","Instruments","expanded","instrumentsList","flexColumnAndRow","flexRow","instrumentItem","instrumentIcon","uprightPiano","grandPiano","star","rate","OccupantInfo","occupantCard","occupantName","occupantType","occupiedUntil","until","OCCUPY_CLASSROOM","OccupantRegistration","classroomId","existingUserValue","setExistingUserValue","chosenUserId","setChosenUserId","chosenUserName","setChosenUserName","occupyClassroom","newUserTypes","PIANO_TUNER","STAFF","OTHER","chosenUserType","setChosenUserType","existingUserInput","useRef","current","focus","userSearch","existingUser","newUser","tempUser","occupant","preventDefault","chosenUser","onFocus","ref","createUserInput","autoComplete","ClassroomInfo","isPassed","occupiedInfo","Tooltip","tooltip","Tag","isMobileDevise","bodyBrief","word","toUpperCase","bodyFull","tagContainer","tag","FREE_CLASSROOM","Footer","setIsPassed","String","freeClassroom","Classroom","occupationInfo","handlePassed","classroomsListItem","background","transition","specialPiano","occupantInfo","Caviar","occupiedStyle","vacantStyle","handleFreeClassroom","caviar","HeaderCheckbox","setChecked","checkmark","filters","ALL","FREE","SPECIAL","Classrooms","filteredClassrooms","setFilteredClassrooms","setFilter","isNoWing","setIsNoWing","isOperaStudioOnly","setIsOperaStudioOnly","noWing","filterTypeOnly","wingOnlyFilter","studioOnlyFilter","filterClassrooms","classroomsPage","event","classroomsList","CREATE_INSTRUMENT","UPDATE_INSTRUMENT","CreateInstrumentPopupBody","isEditMode","addInstrument","instrument","onUpdate","classroomsData","setClassroomsData","createInstrument","updateInstrument","classroomValue","setClassroomValue","set","result","createOneInstrument","DELETE_INSTRUMENT","BrowseInstrumentPopupBody","dataHeader","AdminInstruments","setUpdateList","deleteInstrument","handleUpdate","GET_FACULTIES","useFaculties","faculties","setFaculties","CREATE_DEPARTMENT","UPDATE_DEPARTMENT","CreateDepartmentPopupBody","createDepartment","updateDepartment","selectValue","setSelectValue","setOptions","faculty","f","DELETE_DEPARTMENT","AdminDepartments","deleteDepartment","CREATE_FACULTY","UPDATE_FACULTY","CreateFacultyPopupBody","createFaculty","updateFaculty","DELETE_FACULTY","AdminFaculties","deleteFaculty","CREATE_DEGREE","UPDATE_DEGREE","CreateDegreePopupBody","createDegree","updateDegree","startMonth","startDay","durationMonths","GET_DEGREES","useDegrees","degrees","setDegrees","DELETE_DEGREE","AdminDegrees","Content","component","Layout","layout","blurred","App","reportWebVitals","onPerfEntry","Function","getCLS","getFID","getFCP","getLCP","getTTFB","ReactDOM","render","StrictMode","getElementById"],"mappings":"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","file":"static/js/main.0b9c355b.chunk.js","sourcesContent":["// extracted by mini-css-extract-plugin\nmodule.exports = {\"headerInput\":\"main_headerInput__vnDol\",\"headerDateInput\":\"main_headerDateInput__k6eyF\",\"input\":\"main_input__3nqeT\",\"required\":\"main_required__1lhuC\",\"fade-in\":\"main_fade-in__2uupc\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"true\":\"sidebar_true__wRYfw\",\"false\":\"sidebar_false__1Uzg_\",\"navigation\":\"sidebar_navigation__2rdFo\",\"logoWrapper\":\"sidebar_logoWrapper__wMzh8\",\"menuIcon\":\"sidebar_menuIcon__ImpWf\",\"currentPageName\":\"sidebar_currentPageName__3Wfnt\",\"icon\":\"sidebar_icon__1XVNN\",\"settings\":\"sidebar_settings__-2mo2\",\"link\":\"sidebar_link__ERhkT\",\"linkActive\":\"sidebar_linkActive__3cCQi\",\"alert\":\"sidebar_alert__3ljs7\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"notificationWrapper\":\"notification_notificationWrapper__16-pd\",\"notification\":\"notification_notification__2lEK8\",\"slide-in-right\":\"notification_slide-in-right__1Uvjt\",\"exit\":\"notification_exit__1jgO3\",\"slide-out-right\":\"notification_slide-out-right__3yOFB\",\"ok\":\"notification_ok__20_cT\",\"alert\":\"notification_alert__2-ppo\",\"default\":\"notification_default__KVLBi\",\"notificationBody\":\"notification_notificationBody__1QBEf\",\"notificationClose\":\"notification_notificationClose__1vedn\",\"header\":\"notification_header__2-F1d\",\"message\":\"notification_message__3wo_M\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"classroomsListItem\":\"classroom_classroomsListItem__XObl6\",\"header\":\"classroom_header__1NoxV\",\"special\":\"classroom_special__2Tset\",\"footer\":\"classroom_footer__UrM41\",\"occupantInfo\":\"classroom_occupantInfo__34UcJ\",\"occupantName\":\"classroom_occupantName__admKq\",\"occupantType\":\"classroom_occupantType__pmMwS\",\"occupationInfo\":\"classroom_occupationInfo__3txIy\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"logo\":\"logo_logo__2PBiY\",\"animate-position\":\"logo_animate-position__2fEiZ\",\"logoTitle\":\"logo_logoTitle__j0SLC\",\"logoDescription\":\"logo_logoDescription__15aGu\",\"logoWrapper\":\"logo_logoWrapper__11R_j\",\"smallLogo\":\"logo_smallLogo__2AuAk\",\"slide-in-fwd-center\":\"logo_slide-in-fwd-center__1J5_g\",\"smallLogoTitle\":\"logo_smallLogoTitle__2FObg\",\"logoText\":\"logo_logoText__1zYJS\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"popupBackground\":\"popupWindow_popupBackground__3wGwV\",\"modal\":\"popupWindow_modal__1-pZQ\",\"sider\":\"popupWindow_sider__36ivT\",\"modalBody\":\"popupWindow_modalBody__F34QP\",\"confirm\":\"popupWindow_confirm__109QA\",\"slide-in-top\":\"popupWindow_slide-in-top__j1uu0\",\"slide-out-top\":\"popupWindow_slide-out-top__171La\",\"fade-in\":\"popupWindow_fade-in__2PgXb\",\"fade-out\":\"popupWindow_fade-out__2YY8x\",\"modalHeader\":\"popupWindow_modalHeader__JLtng\",\"modalClose\":\"popupWindow_modalClose__1zIlw\",\"modalFooter\":\"popupWindow_modalFooter__1MR28\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"wrapper\":\"registry_wrapper__cj-Xu\",\"buttons\":\"registry_buttons__fbm2i\",\"container\":\"registry_container__1Li63\",\"listHeader\":\"registry_listHeader__1jFiO\",\"unit\":\"registry_unit__3Bamu\",\"active\":\"registry_active__3ik9M\",\"noItemsText\":\"registry_noItemsText__1K2DC\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"flexColumnAndRow\":\"instruments_flexColumnAndRow__35E7H\",\"flexRow\":\"instruments_flexRow__vbSIn\",\"instrumentsList\":\"instruments_instrumentsList__2CBVy\",\"instrumentIcon\":\"instruments_instrumentIcon__2mOv9\",\"instrumentItem\":\"instruments_instrumentItem__3ySFZ\",\"star\":\"instruments_star__3Bhj6\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"centerText\":\"adminDepartments_centerText__-KkaP\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"wrapper\":\"schedule_wrapper__eHCpz\",\"row\":\"schedule_row__2DNr9\",\"scheduleHeader\":\"schedule_scheduleHeader__3Qbq9\",\"space\":\"schedule_space__41ohm\",\"timeline\":\"schedule_timeline__2heJB\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"wrapper\":\"adminClassrooms_wrapper__24bm6\",\"list\":\"adminClassrooms_list__1qyKl\",\"listHeader\":\"adminClassrooms_listHeader__Ecuje\",\"centerText\":\"adminClassrooms_centerText__3VhEK\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"occupantCard\":\"occupantInfo_occupantCard__WDgWV\",\"occupantType\":\"occupantInfo_occupantType__L1w3N\",\"icon\":\"occupantInfo_icon__2ZVID\",\"occupantName\":\"occupantInfo_occupantName__3vabV\",\"occupiedUntil\":\"occupantInfo_occupiedUntil__tnO4o\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"button\":\"button_button__3_GL1\",\"sizes\":\"button_sizes__3gOCJ\",\"primary\":\"button_primary__17m96\",\"default\":\"button_default__3iLB2\",\"white\":\"button_white__3joJT\",\"red\":\"button_red__GkMyt\",\"AnimationName\":\"button_AnimationName__2JyV1\",\"blue\":\"button_blue__1DI3K\",\"orange\":\"button_orange__2zWem\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"container\":\"dataList_container__3ehoA\",\"list\":\"dataList_list__1TpVz\",\"headerRow\":\"dataList_headerRow__1g__n\",\"row\":\"dataList_row__2F3xp\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"wrapper\":\"createClassroomPopupBody_wrapper__3VQsu\",\"container\":\"createClassroomPopupBody_container__1Uaq2\",\"instrumentsCheckbox\":\"createClassroomPopupBody_instrumentsCheckbox__19mZA\",\"addInstrumentIcon\":\"createClassroomPopupBody_addInstrumentIcon__19SLc\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"list\":\"admin_list__gxyXJ\",\"serverURL\":\"admin_serverURL__2azSe\",\"settings\":\"admin_settings__2hm8s\",\"unverified\":\"admin_unverified__2inkU\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"alignText\":\"adminInstruments_alignText__3Lm0b\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"home\":\"home_home__rJ9X6\",\"welcome\":\"home_welcome__3u6JC\",\"gradient\":\"home_gradient__3SVv9\",\"about\":\"home_about__vWhBR\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"editIcon\":\"edit_editIcon__w9XfA\",\"dark\":\"edit_dark__23KdW\",\"light\":\"edit_light__3tUXP\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"wrapper\":\"adminUsers_wrapper__T04Fs\",\"list\":\"adminUsers_list__1Oucl\",\"listHeader\":\"adminUsers_listHeader__r47L7\",\"alignText\":\"adminUsers_alignText__2oM4M\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"wrapper\":\"headerCheckbox_wrapper__P-SXo\",\"container\":\"headerCheckbox_container__168eM\",\"checkmark\":\"headerCheckbox_checkmark__kiAT9\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"layout\":\"layout_layout__2VB0u\",\"blurred\":\"layout_blurred__1OIZG\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"link\":\"userProfile_link__3ZQrP\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"list\":\"browseClassroomPopupBody_list__25TxG\",\"instruments\":\"browseClassroomPopupBody_instruments__2rZg0\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"userSearch\":\"occupantRegistration_userSearch__39BOZ\",\"createUserInput\":\"occupantRegistration_createUserInput__2qj4Y\",\"usersSearchInput\":\"occupantRegistration_usersSearchInput__2RnRU\",\"occupantType\":\"occupantRegistration_occupantType__1GYfm\",\"icon\":\"occupantRegistration_icon__2azlC\",\"occupantName\":\"occupantRegistration_occupantName__3M0eC\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"tagContainer\":\"tag_tagContainer__c37qq\",\"tag\":\"tag_tag__1Qbjg\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"selectClassroomsFilter\":\"classrooms_selectClassroomsFilter__3ysOG\",\"classroomsPage\":\"classrooms_classroomsPage__nQEdp\",\"classroomsList\":\"classrooms_classroomsList__24eUj\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"caviar\":\"caviar_caviar__3J3lT\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"content\":\"content_content__Yb7zv\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"header\":\"header_header__v9FKw\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"title\":\"title_title__H_mGl\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"scheduleRow\":\"scheduleUnit_scheduleRow__495IU\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"userType\":\"users_userType__2jHEE\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"wrapper\":\"loader_wrapper__2rsOt\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"addIcon\":\"add_addIcon__30W4G\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"deleteIcon\":\"delete_deleteIcon__14Am0\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"list\":\"browseUserPopupBody_list__38GWz\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"description\":\"classroomInfo_description__867p_\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"tooltip\":\"tooltip_tooltip__rjaer\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"container\":\"createInstrumentPopupBody_container__EwfAk\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"list\":\"browseInstrumentPopupBody_list__3wobN\"};","export enum ErrorCodesUa {\r\n  INVALID_PASSWORD = \"Невірний пароль\",\r\n  USER_NOT_FOUND = \"Користувача не знайдено\",\r\n}\r\n\r\nexport enum ErrorCodes {\r\n  INVALID_PASSWORD = \"INVALID_PASSWORD\",\r\n  USER_NOT_FOUND = \"USER_NOT_FOUND\",\r\n}\r\n\r\nexport enum EmploymentTypes {\r\n  FULL_TIME = 'FULL_TIME',\r\n  PART_TIME = 'PART_TIME',\r\n  HOURLY = 'HOURLY',\r\n}\r\n\r\nexport enum EmploymentTypesUa {\r\n  FULL_TIME = 'Штатний співробітник',\r\n  PART_TIME = 'Часткова',\r\n  HOURLY = 'Погодинна',\r\n}\r\n\r\nexport enum UserTypes {\r\n  STUDENT = \"STUDENT\",\r\n  TEACHER = \"TEACHER\",\r\n  POST_GRADUATE = \"POST_GRADUATE\",\r\n  ADMIN = \"ADMIN\",\r\n  DISPATCHER = \"DISPATCHER\",\r\n  PIANO_TUNER = \"PIANO_TUNER\",\r\n  STAFF = \"STAFF\",\r\n  CONCERTMASTER = \"CONCERTMASTER\",\r\n  ILLUSTRATOR = \"ILLUSTRATOR\",\r\n  OTHER = \"OTHER\",\r\n}\r\n\r\nexport enum UserTypesUa {\r\n  STUDENT = \"Студент\",\r\n  TEACHER = \"Викладач\",\r\n  POST_GRADUATE = \"Асистент/аспірант\",\r\n  ADMIN = \"Адмін\",\r\n  DISPATCHER = \"Диспетчер\",\r\n  PIANO_TUNER = \"Настроювач фортепіано\",\r\n  STAFF = \"Співробітник\",\r\n  CONCERTMASTER = \"Концертмейстер\",\r\n  ILLUSTRATOR = \"Іллюстратор\",\r\n  OTHER = \"Користувач\",\r\n}\r\n\r\nexport enum UserTypeColors {\r\n  STUDENT = \"#1e2c4f\",\r\n  TEACHER = \"#ffa200\",\r\n  POST_GRADUATE = \"#1e2c4f\",\r\n  ADMIN = \"#ffa200\",\r\n  DISPATCHER = \"#ffa200\",\r\n  PIANO_TUNER = \"#ffa200\",\r\n  STAFF = \"#ffa200\",\r\n  CONCERTMASTER = \"#ffa200\",\r\n  ILLUSTRATOR = \"#ffa200\",\r\n  OTHER = \"#ffa200\",\r\n}\r\n\r\nexport enum ActivityTypes {\r\n  LECTURE = '#ffa200',\r\n  INDIVIDUAL_LESSON = '#2b5dff'\r\n}\r\n\r\nexport enum NotificationsTypes {\r\n  OK = \"ok\",\r\n  ALERT = \"alert\",\r\n  DEFAULT = \"default\",\r\n}\r\n\r\nexport type User = {\r\n  id: number;\r\n  createdAt: Date;\r\n  firstName: string;\r\n  patronymic: string | null;\r\n  lastName: string;\r\n  type: string;\r\n  department: Department;\r\n  email: string;\r\n  phoneNumber: string;\r\n  extraPhoneNumbers: string | null;\r\n  nameTemp: string | null;\r\n  startYear: number;\r\n  studentInfo: StudentInfo;\r\n  employeeInfo: EmployeeInfo;\r\n  verified: boolean;\r\n  expireDate: Date | null;\r\n};\r\n\r\nexport type StudentInfo = {\r\n  degree: Degree;\r\n  startYear: number;\r\n  accountStatus: string;\r\n};\r\n\r\nexport type EmployeeInfo = {\r\n  employmentType: EmploymentTypes;\r\n  accountStatus: string;\r\n};\r\n\r\nexport type OccupiedInfo = {\r\n  user: User;\r\n  until: Date;\r\n};\r\n\r\nexport type Comment = {\r\n  id: number;\r\n  user: User;\r\n  body: string;\r\n  date: Date;\r\n};\r\n\r\nexport type InstrumentType = {\r\n  id: number;\r\n  type: string;\r\n  name: string;\r\n  rate: number;\r\n  persNumber: number;\r\n  comments: Comment | null;\r\n  classroom: ClassroomType;\r\n};\r\n\r\nexport type DisabledInfo = {\r\n  comment: string;\r\n  until: Date;\r\n};\r\n\r\nexport type ScheduleUnitType = {\r\n  id: number;\r\n  user: User;\r\n  classroom: ClassroomType;\r\n  dateStart: Date;\r\n  dateEnd: Date;\r\n  dayOfWeek: number;\r\n  from: string;\r\n  to: string;\r\n  activity: string;\r\n};\r\n\r\nexport type ClassroomType = {\r\n  id: number;\r\n  name: string;\r\n  chair: Department | null;\r\n  special: string | null;\r\n  floor: number;\r\n  isWing: boolean;\r\n  isOperaStudio: boolean;\r\n  description: string | null;\r\n  occupied: OccupiedInfo | null;\r\n  instruments: Array<InstrumentType>;\r\n  disabled: DisabledInfo | null;\r\n  schedule: Array<ScheduleUnitType>;\r\n};\r\n\r\nexport type RegisterUnit = {\r\n  id: number;\r\n  user: User;\r\n  nameTemp: string;\r\n  classroom: {\r\n    id: number;\r\n    name: string;\r\n  };\r\n  start: string;\r\n  end: string;\r\n};\r\n\r\nexport type Degree = {\r\n  id: number\r\n  name: string;\r\n  startMonth: number;\r\n  startDay: number;\r\n  durationMonths: number;\r\n};\r\n\r\nexport type Faculty = {\r\n  id: number;\r\n  name: string;\r\n  departments: Department[];\r\n  users: User[];\r\n}\r\n\r\nexport type Department = {\r\n  id: number;\r\n  name: string;\r\n  faculty: Faculty;\r\n  users: User[];\r\n};\r\n\r\nexport type MenuElement = {\r\n  text: string;\r\n  path: string;\r\n  icon: string;\r\n  exact?: boolean;\r\n  rights: string;\r\n};\r\n\r\nexport enum ClassroomsFilterTypes {\r\n  ALL = 'ALL',\r\n  FREE = 'FREE',\r\n  SPECIAL = 'SPECIAL'\r\n}","import React from \"react\";\nimport styles from \"./logo.module.css\";\n\ninterface PropTypes {\n  title: string;\n  description: string;\n  size?: \"small\" | \"default\";\n}\n\nconst Logo: React.FC<PropTypes> = ({\n  title,\n  description,\n  size = \"default\",\n}) => {\n  const style = {};\n  return (\n    <div className={styles.logoWrapper}>\n      <div\n        className={\n          size === \"default\"\n            ? styles.logo\n            : size === \"small\"\n            ? styles.smallLogo\n            : styles.logo\n        }\n      >\n        <div className={styles.logoText}>\n          <h1\n            className={\n              size === \"default\"\n                ? styles.logoTitle\n                : size === \"small\"\n                ? styles.smallLogoTitle\n                : styles.logoTitle\n            }\n          >\n            {title}\n          </h1>\n          {size !== \"small\" && (\n            <h2 className={styles.logoDescription}>{description}</h2>\n          )}\n        </div>\n      </div>\n    </div>\n  );\n};\n\nexport default Logo;\n","export default __webpack_public_path__ + \"static/media/menu.5383e8d1.svg\";","export default __webpack_public_path__ + \"static/media/home.544bb88f.svg\";","export default __webpack_public_path__ + \"static/media/classrooms.b892cc70.svg\";","export default __webpack_public_path__ + \"static/media/registry.bb713715.svg\";","export default __webpack_public_path__ + \"static/media/schedule.ab67c37a.svg\";","export default __webpack_public_path__ + \"static/media/profile.fb3cb62a.svg\";","export default __webpack_public_path__ + \"static/media/users.20e4c9d2.svg\";","export default __webpack_public_path__ + \"static/media/settings.c2c79171.svg\";","import { gql } from \"@apollo/client\";\r\n\r\nexport const GET_USERS = gql`\r\n  query getUsers {\r\n    users {\r\n      id\r\n      firstName\r\n      patronymic\r\n      lastName\r\n      type\r\n      department {\r\n        name\r\n      }\r\n      email\r\n      phoneNumber\r\n      extraPhoneNumbers\r\n      nameTemp\r\n      studentInfo {\r\n        degree {\r\n          name\r\n        }\r\n        startYear\r\n        accountStatus\r\n      }\r\n      employeeInfo {\r\n        employmentType\r\n        accountStatus\r\n      }\r\n    }\r\n  }\r\n`;\r\n\r\nexport const GET_USER_BY_ID = gql`\r\n  query getUserById($where: UserWhereUniqueInput!) {\r\n    user(where: $where) {\r\n      id\r\n      firstName\r\n      patronymic\r\n      lastName\r\n      type\r\n      department {\r\n        name\r\n      }\r\n      email\r\n      phoneNumber\r\n      extraPhoneNumbers\r\n      nameTemp\r\n      studentInfo {\r\n        degree {\r\n          name\r\n        }\r\n        startYear\r\n        accountStatus\r\n      }\r\n      employeeInfo {\r\n        employmentType\r\n        accountStatus\r\n      }\r\n    }\r\n  }\r\n`;\r\n","import React, {useEffect, useState} from \"react\";\nimport styles from \"./sidebar.module.css\";\nimport Logo from \"../../logo/Logo\";\nimport { NavLink, Route, Switch } from \"react-router-dom\";\nimport menuIcon from \"../../../assets/images/menu.svg\";\nimport homeIcon from \"../../../assets/images/home.svg\";\nimport classroomsIcon from \"../../../assets/images/classrooms.svg\";\nimport registryIcon from \"../../../assets/images/registry.svg\";\nimport scheduleIcon from \"../../../assets/images/schedule.svg\";\nimport profileIcon from \"../../../assets/images/profile.svg\";\nimport usersIcon from \"../../../assets/images/users.svg\";\nimport controlIcon from \"../../../assets/images/settings.svg\";\nimport {useQuery} from \"@apollo/client\";\nimport {GET_USERS} from \"../../../api/operations/queries/users\";\nimport {User} from \"../../../models/models\";\n\nconst Sidebar = () => {\n  const [collapsed, setCollapsed] = useState(true);\n  const {data} = useQuery(GET_USERS);\n  const [unverifiedCounter, setUnverifiedCounter] = useState(0);\n\n  useEffect(() => {\n    setUnverifiedCounter(0);\n    if (data) {\n      data.users.forEach((user: User) => {\n        !user.verified && setUnverifiedCounter(prevState => prevState+1);\n      });\n    }\n  }, [data]);\n\n  const onMenuClick = () => setCollapsed((prevState) => !prevState);\n\n  const onClick = () => {\n    const screenWidth = window.screen.width;\n\n    setCollapsed((prevState) => {\n      if (screenWidth < 1024) {\n        return !prevState;\n      } else {\n        return prevState;\n      }\n    });\n  }\n\n  return (\n    <div\n      className={[styles[collapsed.toString()], styles.navigation].join(\" \")}\n    >\n      <div onClick={onMenuClick} className={styles.logoWrapper}>\n        <Logo\n          title={collapsed ? \"Au\" : \"Auditorium\"}\n          description=\"Система управління видачею аудиторій\"\n          size=\"small\"\n        />\n      </div>\n      <img\n        onClick={onMenuClick}\n        className={styles.menuIcon}\n        src={menuIcon}\n        alt=\"menu\"\n      />\n      <p className={styles.currentPageName}>\n        <Switch>\n          <Route exact path=\"/\">\n            Головна\n          </Route>\n          <Route exact path=\"/classrooms\">\n            Аудиторії\n          </Route>\n          <Route exact path=\"/registry\">\n            Журнал\n          </Route>\n          <Route exact path=\"/schedule\">\n            Розклад\n          </Route>\n          <Route exact path=\"/users\">\n            Користувачі\n          </Route>\n          <Route exact path=\"/profile\">\n            Профіль\n          </Route>\n          <Route exact path=\"/admin\">\n            Налаштування\n          </Route>\n        </Switch>\n      </p>\n      <ul>\n        <li>\n          <NavLink\n            activeClassName={styles.linkActive}\n            exact\n            className={styles.link}\n            onClick={onClick}\n            to=\"/\"\n          >\n            <img className={styles.icon} src={homeIcon} alt=\"home\" />\n            Головна\n          </NavLink>\n        </li>\n        <li>\n          <NavLink\n            activeClassName={styles.linkActive}\n            className={styles.link}\n            onClick={onClick}\n            to=\"/classrooms\"\n          >\n            <img className={styles.icon} src={classroomsIcon} alt=\"classrooms\" />\n            Аудиторії\n          </NavLink>\n        </li>\n        <li>\n          <NavLink\n            activeClassName={styles.linkActive}\n            className={styles.link}\n            onClick={onClick}\n            to=\"/registry\"\n          >\n            <img className={styles.icon} src={registryIcon} alt=\"registry\" />\n            Журнал\n          </NavLink>\n        </li>\n        <li>\n          <NavLink\n            activeClassName={styles.linkActive}\n            className={styles.link}\n            onClick={onClick}\n            to=\"/schedule\"\n          >\n            <img className={styles.icon} src={scheduleIcon} alt=\"schedule\" />\n            Розклад\n          </NavLink>\n        </li>\n        <li>\n          <NavLink\n            activeClassName={styles.linkActive}\n            className={styles.link}\n            onClick={onClick}\n            to=\"/users\"\n          >\n            <img className={styles.icon} src={usersIcon} alt=\"users\" />\n            Користувачі\n          </NavLink>\n        </li>\n        <li>\n          <NavLink\n            activeClassName={styles.linkActive}\n            className={styles.link}\n            onClick={onClick}\n            to=\"/profile\"\n          >\n            <img className={styles.icon} src={profileIcon} alt=\"profile\" />\n            Профіль\n          </NavLink>\n        </li>\n        <li>\n          {unverifiedCounter !== 0 && <span className={styles.alert}>!</span>}\n          <NavLink\n            activeClassName={styles.linkActive}\n            className={styles.link}\n            onClick={onClick}\n            to=\"/admin\"\n          >\n            <img className={[styles.icon, styles.settings].join(' ')} src={controlIcon} alt=\"control\" />\n            Налаштування\n          </NavLink>\n        </li>\n      </ul>\n    </div>\n  );\n};\n\nexport default Sidebar;\n","import React from \"react\";\nimport styles from \"./home.module.css\";\nimport Logo from \"../../components/logo/Logo\";\n\nconst Home = () => {\n  return (\n    <div className={styles.home}>\n      <Logo\n        title=\"Auditorium\"\n        description=\"Система управління видачею аудиторій\"\n      />\n      <h1 className={styles.welcome}>Гість, вітаємо в Auditorium!</h1>\n      <div className={styles.about}>\n        <ul>\n          <p>В цій програмі Ви можете:</p>\n          <li>Переглядати в режимі онлайн наявність вільних аудиторий</li>\n          <li>\n            Переглядати інформацію про аудиторії та наявні в них інструменти,\n            тощо\n          </li>\n          <li>Дивитись розклад як на сьогодні, так і на кожен день.</li>\n          <li>Переглядати інформацію про викладачів</li>\n        </ul>\n        <ul>\n          <p>Для учбової частини:</p>\n          <li>\n            Записувати і виписувати користувачів в аудиторії (як зареєстрованих\n            в системі, так і незареєстрованих)\n          </li>\n          <li>Дивитись інформацію по кожному користувачу</li>\n          <li>\n            Автоматичне заповнення журналу відвідувань з можливістю\n            роздрукування або збереження у форматі PDF\n          </li>\n          <li>Перегляд розкладу</li>\n        </ul>\n        <ul>\n          <p>Для адміністратора:</p>\n          <li>\n            Створення/коригування/видалення аудиторій, користувачів,\n            інструментів\n          </li>\n          <li>Створення та редагування розкладу</li>\n        </ul>\n      </div>\n    </div>\n  );\n};\n\nexport default Home;\n","import React from \"react\";\r\nimport styles from \"./header.module.css\";\r\n\r\nconst Header: React.FC = ({ children }) => {\r\n  return (\r\n    <header className={styles.header}>\r\n      {children}\r\n    </header>\r\n  );\r\n};\r\n\r\nexport default Header;\r\n","import {gql} from \"@apollo/client\";\r\n\r\nexport const GET_REGISTER = gql`\r\n    query getRegister($where: RegisterWhereInput!) {\r\n        register(where: $where) {\r\n            id\r\n            user {\r\n                lastName\r\n                firstName\r\n                patronymic\r\n                id\r\n                type\r\n                email\r\n                phoneNumber\r\n                nameTemp\r\n            }\r\n            classroom {\r\n                name\r\n            }\r\n            nameTemp\r\n            start\r\n            end\r\n        }\r\n    }\r\n`","import React, {CSSProperties} from \"react\";\nimport styles from \"./button.module.css\";\n\ninterface PropTypes {\n  onClick?: () => void;\n  kind?: \"default\" | \"primary\";\n  type?: \"button\" | \"submit\" | \"reset\"\n  color?: \"white\" | \"blue\" | \"red\" | \"orange\";\n  disabled?: boolean\n  style?: CSSProperties | undefined,\n  form?: string\n}\n\nconst Button: React.FC<PropTypes> = ({\n  children,\n  onClick,\n  kind = \"primary\",\n  type = \"button\",\n  color = \"blue\",\n  disabled = false,\n  style = undefined,\n  form= \"\"\n}) => {\n  return (\n    <button\n      form={form}\n      style={style}\n      disabled={disabled}\n      type={type}\n      className={[\n        styles.button,\n        kind === \"primary\" && styles[color],\n        styles[type], !style && styles.sizes\n      ].join(\" \")}\n      onClick={onClick}\n    >\n      {children}\n    </button>\n  );\n};\n\nexport default Button;","import {\n  HOUR,\n  MINUTE,\n  TIME_SNIPPETS,\n  WORKING_DAY_END,\n  WORKING_DAY_START,\n} from \"./constants\";\nimport {\n  OccupiedInfo,\n  ScheduleUnitType,\n  User,\n  UserTypes,\n} from \"../models/models\";\n\nexport const getScheduleTimeline = (start: number, end: number): string[] => {\n  let timeSnippets: string[] = [];\n  for (let hour = start; hour <= end; hour++) {\n    if (hour === end) {\n      timeSnippets.push(hour + \":00\");\n    } else {\n      TIME_SNIPPETS.forEach((minutes) => {\n        timeSnippets.push(hour + minutes);\n      });\n    }\n  }\n  return timeSnippets;\n};\n\nconst getScheduleTimeInMilliseconds = (scheduleUnitTime: any) => {\n  return scheduleUnitTime\n    .split(\":\")\n    .map((el: any, index: number) => {\n      return index === 0 ? Number(el) * HOUR : Number(el) * MINUTE;\n    })\n    .reduce((acc: any, curr: any) => acc + curr);\n};\n\nexport const getPossiblyOccupied = (schedule: Array<any>) => {\n  const current =\n    new Date().getHours() * HOUR + new Date().getMinutes() * MINUTE;\n  const timeSnippets = schedule.map((el: any) => {\n    return {\n      from: getScheduleTimeInMilliseconds(el.from),\n      to: getScheduleTimeInMilliseconds(el.to),\n    };\n  });\n  return timeSnippets\n    .map((el: any) => {\n      return current >= el.from && current <= el.to;\n    })\n    .some((el: any) => el === true);\n};\n\nexport const getTimeHHMM = (date: Date) => {\n  return date.getHours() + \":\" + formatMinutesToMM(date.getMinutes());\n};\n\nexport const getScheduleUnitRowLength = (\n  schedule: Array<ScheduleUnitType>,\n  units: string\n) =>\n  schedule\n    .map((scheduleUnit: ScheduleUnitType) => {\n      return parseInt(scheduleUnit.to) - parseInt(scheduleUnit.from) + units;\n    })\n    .join(\" \");\n\nexport const formatMinutesToMM = (value: number) => {\n  if (value <= 9) return `0${value}`;\n  else return value;\n};\n\nexport const fullName = (user: User | undefined, withInitials = false) => {\n  if (user !== undefined) {\n    if (withInitials) {\n      return `${user.lastName} ${user.firstName.charAt(0)}. ${\n        user.patronymic ? user.patronymic.charAt(0) + \".\" : \"\"\n      }`;\n    } else {\n      return `${user.lastName} ${user.firstName} ${\n        user.patronymic ? user.patronymic : \"\"\n      }`;\n    }\n  }\n  return \"\";\n};\n\nexport const typeStyle = (occupied: OccupiedInfo) => {\n  const student = { backgroundColor: \"rgba(46,40,124)\", color: \"#fff\" };\n  const employee = { backgroundColor: \"#ffc000\", color: \"#fff\" };\n  const vacant = {\n    backgroundColor: \"transparent\",\n    color: \"#000\",\n  };\n  if (occupied !== null) {\n    switch (occupied.user.type) {\n      case UserTypes.STUDENT:\n        return student;\n      case UserTypes.POST_GRADUATE:\n        return student;\n      default:\n        return employee;\n    }\n  }\n  return vacant;\n};\n\n//get int from time unit. ex: \"9:15\" -> 36 where each 15 min == 1; ex: \"00:15\" -> 1, \"10:00\" ->40\nconst simpleIntFromScheduleUnit = (time: string) => {\n  const reducer = (accumulator: any, currentValue: any) =>\n    accumulator + currentValue;\n  return time\n    .split(\":\")\n    .map((el: string, index: number) => {\n      if (index === 0) {\n        return parseInt(el) * 4;\n      } else {\n        switch (parseInt(el)) {\n          case 0:\n            return 0;\n          case 15:\n            return 1;\n          case 30:\n            return 2;\n          case 45:\n            return 3;\n        }\n      }\n    })\n    .reduce(reducer);\n};\n\n//get schedule units size in fr units for grids\nexport const getScheduleUnitSize = (\n  units: Array<ScheduleUnitType>,\n  fillEmpty = true\n) => {\n  const items = [];\n  if (fillEmpty) {\n    items.push(parseInt(units[0].from) - WORKING_DAY_START);\n  }\n  for (let item of units) {\n    const from = simpleIntFromScheduleUnit(item.from);\n    const to = simpleIntFromScheduleUnit(item.to);\n    items.push((to as number) - (from as number));\n  }\n  if (fillEmpty) {\n    items.push(WORKING_DAY_END - parseInt(units[units.length - 1].to));\n  }\n\n  return items.map((item) => `${item}fr`).join(\" \");\n};\n\nexport const ISODateString = (d: Date) => {\n  function pad(n: any) {\n    return n < 10 ? \"0\" + n : n;\n  }\n  return (\n    d.getUTCFullYear() +\n    \"-\" +\n    pad(d.getUTCMonth() + 1) +\n    \"-\" +\n    pad(d.getUTCDate())\n    // +\n    // \"T\" +\n    // pad(d.getUTCHours()) +\n    // \":\" +\n    // pad(d.getUTCMinutes()) +\n    // \":\" +\n    // pad(d.getUTCSeconds()) +\n    // \"Z\"\n  );\n};\n","export const HOUR = 3600000;\r\nexport const MINUTE = 60000;\r\nexport const TIME_SNIPPETS = [\":00\", \":15\", \":30\", \":45\"];\r\nexport const WORKING_DAY_END = 21;\r\nexport const WORKING_DAY_START = 8;","import React, {ReactFragment} from \"react\";\r\nimport styles from \"./title.module.css\";\r\n\r\ninterface PropTypes {\r\n  title: ReactFragment | string;\r\n}\r\n\r\nconst Title: React.FC<PropTypes> = ({ title }) => {\r\n  return (\r\n    <div className={styles.title}>\r\n      <p>{title}</p>\r\n    </div>\r\n  );\r\n};\r\n\r\nexport default Title;\r\n","import React from \"react\";\r\nimport styles from \"./userProfile.module.css\";\r\nimport { useQuery } from \"@apollo/client\";\r\nimport { GET_USER_BY_ID } from \"../../api/operations/queries/users\";\r\nimport Title from \"../title/Title\";\r\nimport { UserTypes, UserTypesUa } from \"../../models/models\";\r\nimport Button from \"../button/Button\";\r\n\r\ninterface PropTypes {\r\n  userId: number;\r\n}\r\n\r\nconst UserProfile: React.FC<PropTypes> = ({ userId }) => {\r\n\r\n  const { data, loading, error } = useQuery(GET_USER_BY_ID, {\r\n    variables: {\r\n      where: {\r\n        id: userId,\r\n      }\r\n    },\r\n  });\r\n\r\n  if (!loading && !error)\r\n    return (\r\n      <div>\r\n        <Title title=\"Персональний номер\" />\r\n        <p>{data.user.id}</p>\r\n        <Title title=\"Статус\" />\r\n        <p>{UserTypesUa[data.user.type as UserTypes]}</p>\r\n        <Title title=\"Кафедра\" />\r\n        <p>{data.user.department}</p>\r\n        <Title title=\"E-mail\" />\r\n        <p>\r\n          <Button>\r\n            <a className={styles.link} href={`mailto:${data.user.email}`}>\r\n              {data.user.email}\r\n            </a>\r\n          </Button>\r\n        </p>\r\n        <Title title=\"Телефон\" />\r\n        <p>\r\n          <Button>\r\n            <a className={styles.link} href={`tel:${data.user.phoneNumber}`}>\r\n              {data.user.phoneNumber}\r\n            </a>\r\n          </Button>\r\n        </p>\r\n      </div>\r\n    );\r\n  return <p>Loading...</p>;\r\n};\r\n\r\nexport default UserProfile;\r\n","import React, { ReactElement, useState } from \"react\";\r\nimport styles from \"./popupWindow.module.css\";\r\n\r\ninterface PropTypes {\r\n  header: any;\r\n  body: any;\r\n  footer?: any;\r\n  dispatch: (value: any) => void;\r\n  isConfirm?: boolean;\r\n}\r\n\r\nconst PopupWindow: React.FC<PropTypes> = ({header, body, dispatch, footer = \"\",\r\n  isConfirm}) => {\r\n  const [entering, setEntering] = useState(true);\r\n  const onClose = () => {\r\n    setEntering(false);\r\n    setTimeout(() => {\r\n      dispatch({\r\n        type: \"POP_POPUP_WINDOW\",\r\n      });\r\n    }, 300);\r\n  };\r\n  const footerWithProps = React.Children.map(footer, (child: ReactElement) => {\r\n    if (React.isValidElement(child)) {\r\n      // @ts-ignore\r\n      return React.cloneElement(child, { dispatch: dispatch });\r\n    }\r\n    return child;\r\n  });\r\n\r\n  const bodyWithProps = React.Children.map(body, (child: ReactElement) => {\r\n    if (React.isValidElement(child)) {\r\n      // @ts-ignore\r\n      return React.cloneElement(child, { dispatch: dispatch });\r\n    }\r\n    return child;\r\n  });\r\n\r\n  return (\r\n    <div\r\n      className={[\r\n        styles.popupBackground,\r\n        styles[entering ? \"fade-in\" : \"fade-out\"],\r\n      ].join(\" \")}\r\n      onClick={(e) => e.target === e.currentTarget && onClose()}\r\n    >\r\n      <div\r\n        className={[\r\n          styles.modal,\r\n          styles[entering ? \"slide-in-top\" : \"slide-out-top\"],\r\n          isConfirm ? styles.confirm : ''\r\n        ].join(\" \")}\r\n      >\r\n        <div className={styles.modalHeader}>\r\n          {header}\r\n          <span className={styles.modalClose} onClick={onClose} />\r\n        </div>\r\n        <div className={styles.modalBody}>{bodyWithProps}</div>\r\n        <div className={styles.modalFooter}>{footerWithProps}</div>\r\n      </div>\r\n    </div>\r\n  );\r\n};\r\n\r\nexport default PopupWindow;\r\n","import { ApolloClient, InMemoryCache, makeVar } from \"@apollo/client\";\r\n\r\nconst serverURL = localStorage.getItem('serverURL');\r\n\r\nexport const client = new ApolloClient({\r\n  uri: serverURL ? serverURL as string : 'http://localhost:4000/',\r\n  cache: new InMemoryCache({\r\n    typePolicies: {\r\n      Query: {\r\n        fields: {\r\n          isLogged: {\r\n            read() {\r\n              return isLoggedVar();\r\n            },\r\n          },\r\n          isBlurred: {\r\n            read() {\r\n              return isBlurredVar();\r\n            },\r\n          },\r\n          gridUpdate: {\r\n            read() {\r\n              return gridUpdate();\r\n            },\r\n          },\r\n          meType: {\r\n            read() {\r\n              return meType();\r\n            },\r\n          },\r\n        },\r\n      },\r\n    },\r\n  }),\r\n});\r\nexport const isLoggedVar = makeVar(false);\r\nexport const isBlurredVar = makeVar(false);\r\nexport const gridUpdate = makeVar(false);\r\nexport const meType = makeVar(\"USER\");\r\n","import React, { createContext, useContext, useReducer, useState } from \"react\";\nimport { v4 } from \"uuid\";\nimport PopupWindow from \"./PopupWindow\";\nimport { isBlurredVar } from \"../../api/client\";\n\ninterface PropTypes {}\n\nexport const PopupWindowContext = createContext({});\n\nconst PopupWindowProvider: React.FC<PropTypes> = ({ children }) => {\n  const [state, dispatch] = useReducer((state: any, action: any) => {\n    switch (action.type) {\n      case \"PUSH_POPUP_WINDOW\": {\n        isBlurredVar(true);\n        return [...state, { ...action.payload }];\n      }\n      case \"POP_POPUP_WINDOW\": {\n        if (state.length <= 1) {\n          isBlurredVar(false);\n        }\n        return [...state.slice(0, state.length - 1)];\n      }\n\n      default:\n        return state;\n    }\n  }, []);\n  return (\n    <PopupWindowContext.Provider value={dispatch}>\n      {state.map((popup: any) => (\n        <PopupWindow\n          key={popup.id}\n          body={popup.body}\n          header={popup.header}\n          footer={popup.footer}\n          isConfirm={popup.isConfirm}\n          dispatch={dispatch}\n        />\n      ))}\n      {children}\n    </PopupWindowContext.Provider>\n  );\n};\n\nexport const usePopupWindow = () => {\n  const dispatch = useContext(PopupWindowContext);\n  return (props: any) => {\n    // @ts-ignore\n    dispatch({\n      type: \"PUSH_POPUP_WINDOW\",\n      payload: {\n        id: v4(),\n        ...props,\n      },\n    });\n  };\n};\n\nexport default PopupWindowProvider;\n","import React, {useState} from \"react\";\r\nimport styles from \"./registry.module.css\";\r\nimport mainStyles from \"../../styles/main.module.css\";\r\nimport Header from \"../../components/header/Header\";\r\nimport {useQuery} from \"@apollo/client\";\r\nimport {GET_REGISTER} from \"../../api/operations/queries/register\";\r\nimport {RegisterUnit} from \"../../models/models\";\r\nimport pdfMake from \"pdfmake/build/pdfmake\";\r\nimport vfsFonts from \"pdfmake/build/vfs_fonts\";\r\nimport Button from \"../../components/button/Button\";\r\nimport {getDocumentDefinition, getFormattedData} from \"./PDFConfig\";\r\nimport {fullName, getTimeHHMM} from \"../../helpers/helpers\";\r\nimport UserProfile from \"../../components/userProfile/UserProfile\";\r\nimport {usePopupWindow} from \"../../components/popupWindow/PopupWindowProvider\";\r\n\r\nconst Registry = () => {\r\n  const dispatchPopupWindow = usePopupWindow();\r\n  const [date, setDate] = useState(new Date().toString());\r\n  const {data, loading, error} = useQuery(GET_REGISTER, {\r\n    variables: {\r\n      where: {\r\n        start: {\r\n          gte: new Date(new Date(date).setHours(0, 0, 0, 0))\r\n        }\r\n      }\r\n    },\r\n    fetchPolicy: \"network-only\"\r\n  });\r\n  const {vfs} = vfsFonts.pdfMake;\r\n  pdfMake.vfs = vfs;\r\n  const registerData = !loading && !error ? getFormattedData(data) : [];\r\n  const registerDate = new Date(date);\r\n  const documentDefinition = getDocumentDefinition(registerDate, registerData);\r\n  const readableDate = new Date(date).getDate() + \".\"\r\n    + (new Date(date).getMonth() + 1) + \".\"\r\n    + new Date(date).getFullYear();\r\n\r\n  const handleClick = (unit: RegisterUnit) => {\r\n    if (unit.nameTemp === null) {\r\n      dispatchPopupWindow({\r\n        header: <h1>{fullName(unit.user)}</h1>,\r\n        body: <UserProfile userId={unit.user.id as number}/>,\r\n      });\r\n    }\r\n  };\r\n\r\n  const handleChangeDate = (e: any) => {\r\n    setDate(e.target.value);\r\n  }\r\n\r\n  return (\r\n    <div>\r\n      <Header>\r\n        <h1>Журнал</h1>\r\n        <input\r\n          type=\"date\"\r\n          value={date}\r\n          onChange={handleChangeDate}\r\n          className={mainStyles.headerDateInput}\r\n        />\r\n        <div className={styles.buttons}>\r\n          <Button\r\n            onClick={() => {\r\n              pdfMake.createPdf(documentDefinition).print();\r\n            }}\r\n          >\r\n            Роздрукувати\r\n          </Button>\r\n          <Button\r\n            onClick={() => {\r\n              pdfMake\r\n                .createPdf(documentDefinition)\r\n                .download(\r\n                  `register_${[\r\n                    registerDate.getDate(),\r\n                    registerDate.getMonth() + 1,\r\n                    registerDate.getFullYear(),\r\n                  ].join(\".\")}.pdf`\r\n                );\r\n            }}\r\n          >\r\n            Зберегти в PDF\r\n          </Button>\r\n        </div>\r\n      </Header>\r\n\r\n      {!loading && !error ? <div className={styles.wrapper}>\r\n        <div className={styles.listHeader}>\r\n          <p>Ауд.</p>\r\n          <p>П. І. Б.</p>\r\n          <p>Від</p>\r\n          <p>До</p>\r\n        </div>\r\n        <ul className={styles.container}>\r\n          {data?.register?.length === 0 &&\r\n          <p className={styles.noItemsText}>За {readableDate} у журналі відвідувань записи відсутні</p>}\r\n          {data.register && data.register.map((unit: RegisterUnit) => {\r\n            const userName = unit.nameTemp === null ? fullName(unit.user) : unit.nameTemp;\r\n\r\n            return <li\r\n              onClick={() => handleClick(unit)}\r\n              key={unit.start + unit.classroom.name}\r\n              className={styles.unit}\r\n            >\r\n              <span>{unit.classroom.name}</span>\r\n              <span className={!unit.nameTemp ? styles.active : ''}>{userName}</span>\r\n              <span>{getTimeHHMM(new Date(unit.start))}</span>\r\n              <span>{unit.end !== null ? getTimeHHMM(new Date(unit.end)) : '-'}</span>\r\n            </li>\r\n          })}\r\n        </ul>\r\n      </div> : <div>Loading....</div>}\r\n    </div>\r\n  );\r\n};\r\n\r\nexport default Registry;\r\n","import {TDocumentDefinitions} from \"pdfmake/interfaces\";\nimport {RegisterUnit} from \"../../models/models\";\n\nexport const getDocumentDefinition = (registerDate: Date, registerData: any): TDocumentDefinitions => ({\n  pageSize: \"A4\",\n  pageOrientation: \"portrait\",\n  content: [\n    {\n      table: {\n        widths: [30, \"*\", 50, 50],\n        headerRows: 1,\n        dontBreakRows: true,\n        body: [\n          [\n            {\n              text: `Журнал відвідувань за ${[\n                registerDate.getDate(),\n                registerDate.getMonth() + 1,\n                registerDate.getFullYear(),\n              ].join(\".\")}`,\n              style: \"header\",\n              colSpan: 4,\n              alignment: \"center\",\n              margin: [0, 10, 0, 10],\n            },\n            {},\n            {},\n            {},\n          ],\n          [\n            { text: \"Ауд.\", style: \"tableHeader\", alignment: \"center\" },\n            { text: \"П.І.Б.\", style: \"tableHeader\" },\n            { text: \"Від\", style: \"tableHeader\", alignment: \"center\" },\n            { text: \"До\", style: \"tableHeader\", alignment: \"center\" },\n          ],\n          ...registerData,\n          [\n            {\n              text: \"П.І.Б. ___________________ Підпис ____________________\",\n              alignment: \"center\",\n              margin: [0, 10, 0, 10],\n              colSpan: 4,\n            },\n            {},\n            {},\n            {},\n          ],\n        ],\n      },\n    },\n  ],\n  styles: {\n    tableHeader: {\n      bold: true,\n    },\n    header: {\n      fontSize: 18,\n      bold: true,\n    },\n    subheader: {\n      fontSize: 15,\n      bold: true,\n    },\n    quote: {\n      italics: true,\n    },\n    small: {\n      fontSize: 8,\n    },\n  },\n});\n\nexport const getFormattedData = (data: any) => {\n  return data.register.map((unit: RegisterUnit) => {\n    const start =\n      new Date(unit.start).getHours() +\n      \":\" +\n      new Date(unit.start).getMinutes();\n    const end =\n      unit.end !== null\n        ? new Date(unit.end).getHours() +\n        \":\" +\n        new Date(unit.end).getMinutes()\n        : \"—\";\n\n    return [\n      { text: unit.classroom.name, alignment: \"center\" },\n      {\n        text:\n          unit.nameTemp === null\n            ? [\n              unit.user.lastName,\n              unit.user.firstName,\n              unit.user.patronymic,\n            ].join(\" \")\n            : unit.nameTemp,\n      },\n      { text: start, alignment: \"center\" },\n      { text: end, alignment: \"center\" },\n    ];\n  })\n};","import { gql } from \"@apollo/client\";\r\n\r\nexport const GET_SCHEDULE_UNIT = gql`\r\n  query getScheduleUnit($classroomName: String!, $date: Date!) {\r\n    schedule(classroomName: $classroomName, date: $date) {\r\n      id\r\n      user {\r\n        id\r\n        lastName\r\n        firstName\r\n        patronymic\r\n      }\r\n      from\r\n      to\r\n      activity\r\n    }\r\n  }\r\n`;\r\n","import React from \"react\";\nimport styles from \"./scheduleUnit.module.css\";\nimport { useQuery } from \"@apollo/client\";\nimport { GET_SCHEDULE_UNIT } from \"../../api/operations/queries/schedule\";\nimport {fullName, getScheduleUnitSize, ISODateString} from \"../../helpers/helpers\";\nimport {ActivityTypes, ScheduleUnitType} from \"../../models/models\";\nimport Button from \"../button/Button\";\nimport {usePopupWindow} from \"../popupWindow/PopupWindowProvider\";\nimport UserProfile from \"../userProfile/UserProfile\";\n\ninterface PropTypes {\n  classroomName: string;\n}\n\nconst ScheduleUnit: React.FC<PropTypes> = ({ classroomName }) => {\n\n  const { data, loading, error } = useQuery(GET_SCHEDULE_UNIT, {\n    variables: {\n      classroomName: classroomName,\n      date: ISODateString(new Date()),\n    },\n  });\n\n  const dispatchPopupWindow = usePopupWindow();\n\n  const handleClick = (unit: ScheduleUnitType) => {\n    dispatchPopupWindow({\n      header: <h1>{fullName(unit.user)}</h1>,\n      body: <UserProfile userId={unit.user.id as number}/>,\n    });\n  };\n\n  if (!loading && !error)\n    return (\n      <ul\n        style={{\n          gridTemplateColumns: document.body.clientWidth >= 1024 ? getScheduleUnitSize(\n            data.schedule\n              .slice()\n              .sort(\n                (a: ScheduleUnitType, b: ScheduleUnitType) =>\n                  parseInt(a.from) - parseInt(b.from)\n              ),\n            false\n          ):\"1fr\"\n        }}\n        className={styles.scheduleRow}\n      >\n        {data.schedule\n          .slice()\n          .sort(\n            (a: ScheduleUnitType, b: ScheduleUnitType) =>\n              parseInt(a.from) - parseInt(b.from)\n          )\n          .map((unit: ScheduleUnitType) => (\n            <li>\n              <Button\n                onClick={() => handleClick(unit)}\n                style={{\n                  height: \"2rem\",\n                  width: \"100%\",\n                //@ts-ignore\n                  backgroundColor: ActivityTypes[unit.activity],\n                  //@ts-ignore\n                  border: `1px solid ${ActivityTypes[unit.activity]}`\n                }}\n              >\n                {unit.from + \" - \" + unit.to + \" \" + fullName(unit.user, true)}\n              </Button>\n            </li>\n          ))}\n      </ul>\n    );\n  return <p></p>;\n};\n\nexport default ScheduleUnit;\n","import { gql } from \"@apollo/client\";\r\n\r\nexport const GET_CLASSROOMS = gql`\r\n  query getClassrooms($date: Date!) {\r\n    classrooms {\r\n      id\r\n      description\r\n      name\r\n      floor\r\n      special\r\n      chair {\r\n          name\r\n      }\r\n      isWing\r\n      isOperaStudio\r\n      occupied {\r\n        user {\r\n          id\r\n          firstName\r\n          patronymic\r\n          lastName\r\n          type\r\n          nameTemp\r\n          email\r\n          phoneNumber\r\n        }\r\n        until\r\n      }\r\n      schedule(date: $date) {\r\n        from\r\n        to\r\n      }\r\n      instruments {\r\n        name\r\n        type\r\n        rate\r\n      }\r\n      disabled {\r\n        comment\r\n        until\r\n      }\r\n    }\r\n  }\r\n`;","import React, {useState} from \"react\";\r\nimport styles from \"./schedule.module.css\";\r\nimport Header from \"../../components/header/Header\";\r\nimport ScheduleUnit from \"../../components/scheduleUnit/ScheduleUnit\";\r\nimport {useQuery} from \"@apollo/client\";\r\nimport {GET_CLASSROOMS} from \"../../api/operations/queries/classrooms\";\r\nimport {ISODateString} from \"../../helpers/helpers\";\r\nimport {ClassroomType} from \"../../models/models\";\r\nimport mainStyles from \"../../styles/main.module.css\";\r\n\r\nconst timePeriods = [\r\n  '9:00', '10:00', '11:00', '12:00', '13:00', '14:00',\r\n  '15:00', '16:00', '17:00', '18:00', '19:00'\r\n];\r\n\r\nconst Schedule = () => {\r\n  const [date, setDate] = useState(new Date());\r\n  const {data, loading, error} = useQuery(GET_CLASSROOMS, {\r\n    variables: {date: ISODateString(new Date(date))}\r\n  });\r\n\r\n  const handleChangeDate = (e: any) => {\r\n    setDate(e.target.value);\r\n  }\r\n\r\n  return (\r\n    <div>\r\n      <Header>\r\n        <h1>Розклад</h1>\r\n        <input\r\n          type=\"date\"\r\n          value={date as unknown as string}\r\n          onChange={handleChangeDate}\r\n          className={mainStyles.headerDateInput}\r\n        />\r\n      </Header>\r\n      <div className={styles.wrapper}>\r\n        <div className={styles.scheduleHeader}>\r\n          <span className={styles.space}/>\r\n          <div className={styles.timeline}>\r\n            {timePeriods.map(el => <span>{el}</span>)}\r\n          </div>\r\n        </div>\r\n        {!loading && !error && data.classrooms.slice().sort((a: ClassroomType, b: ClassroomType) => {\r\n          return parseInt(a.name) - parseInt(b.name)\r\n        })\r\n          .map((classroom: ClassroomType) => <div className={styles.row}>\r\n            <span>{classroom.name}</span>\r\n            <ScheduleUnit classroomName={classroom.name}/>\r\n          </div>)}\r\n      </div>\r\n    </div>\r\n  );\r\n};\r\n\r\nexport default Schedule;\r\n","export default __webpack_public_path__ + \"static/media/edit.23b360e1.svg\";","import React from 'react';\nimport {useHistory} from \"react-router-dom\";\nimport editIcon from \"../../../assets/images/edit.svg\";\nimport styles from \"./edit.module.css\";\n\ninterface PropTypes {\n  path?: string;\n  onClick?: (value?: any) => void;\n  dark?: boolean;\n}\n\nconst Edit: React.FC<PropTypes> = ({\n   path,\n   onClick,\n   dark = false\n}) => {\n  const history = useHistory();\n\n  return (\n    <img\n      src={editIcon}\n      className={[styles.editIcon, dark ? styles.dark : styles.light].join(' ')}\n      onClick={path ? (e) => {\n        e.stopPropagation();\n        history.push(path)\n      } : (e) => {\n        e.stopPropagation();\n        onClick && onClick();\n      }}\n    />\n  );\n}\n\nexport default Edit;","import {StylesConfig} from \"react-select\";\n\nexport type CategoryType = {\n  value: string;\n  label: string;\n};\n\ntype isMulti = false;\n\nexport const selectStyles: StylesConfig<CategoryType, isMulti> = ({\n  control: (provided, state) => ({\n    ...provided,\n    backgroundColor: '#2e287c',\n    border: '1px solid #fff',\n    borderRadius: 8,\n    width: 160,\n    color: '#fff',\n  }),\n  placeholder: (provided) => ({\n    ...provided,\n    color: '#fff',\n  }),\n  menuList: (provided) => ({\n    ...provided,\n    color: '#000',\n  }),\n  singleValue: (provided) => ({\n    ...provided,\n    color: '#fff',\n  }),\n  indicatorSeparator: () => ({display: 'none'})\n});\n\nexport const selectLightStyles: StylesConfig<CategoryType, isMulti> = ({\n  control: (provided, state) => ({\n    ...provided,\n    backgroundColor: '#fff',\n    border: '1px solid #2e287c',\n    borderRadius: 8,\n    color: '#000',\n  }),\n  placeholder: (provided) => ({\n    ...provided,\n    color: '#ccc',\n  }),\n  menuList: (provided) => ({\n    ...provided,\n    color: '#000',\n  }),\n  singleValue: (provided) => ({\n    ...provided,\n    color: '#000',\n  }),\n  indicatorSeparator: () => ({display: 'none'}),\n  menuPortal: base => ({...base, zIndex: 9999})\n});","import React from 'react';\nimport Select from \"react-select\";\nimport {selectStyles} from \"./selectStyles\";\n\nconst HeaderSelect = ({options, onChange}: any) => {\n  return (\n    <Select\n    options={options}\n    defaultValue={options[0]}\n    styles={selectStyles}\n    onChange={onChange}\n    />\n  );\n}\n\nexport default HeaderSelect;","export default __webpack_public_path__ + \"static/media/loader.fb28d849.svg\";","import React from 'react';\nimport styles from './loader.module.css';\nimport loader from './../../assets/images/loader.svg';\n\nconst Loader = () => {\n  return (\n    <div className={styles.wrapper}>\n      <img src={loader} alt=\"Loading...\"/>\n    </div>\n  );\n}\n\nexport default Loader;","import React, {useEffect, useState} from 'react';\nimport styles from './dataList.module.css';\nimport Loader from \"../loader/Loader\";\n\ninterface PropTypes {\n  header: string[];\n  data: Array<any>;\n  gridTemplateColumns?: string;\n  handleItemClick?: (id: number) => void;\n}\n\nconst DataList: React.FC<PropTypes> = ({header, data, gridTemplateColumns,\n                                         handleItemClick}) => {\n\n  const [columnIndex, setColumnIndex] = useState(0);\n  const [sortedData, setSortedData] = useState(data);\n  const [columns, setColumns] = useState('repeat(3, 1fr)');\n\n  useEffect(() => {\n    setSortedData(data);\n    if (gridTemplateColumns) {\n      setColumns(gridTemplateColumns);\n    } else {\n      setColumns(`20px 3fr 200px`);\n    }\n  }, [data]);\n\n  useEffect(() => {\n    setSortedData(data?.slice().sort((a, b) => {\n      const aValue = a.props.children[columnIndex].props.children;\n      const bValue = b.props.children[columnIndex].props.children;\n      if (typeof aValue === 'string') return aValue.localeCompare(bValue);\n      return aValue - bValue;\n    }));\n  }, [columnIndex, data]);\n\n  const handleClick = (index: number) => {\n    setColumnIndex(index);\n  };\n\n  return (\n    <div className={styles.container}>\n      <ul className={styles.list}>\n        <li className={styles.headerRow} style={{gridTemplateColumns: columns}}>\n          {header?.map((item, index) => <span\n            onClick={() => handleClick(index)}>{item}</span>)}\n        </li>\n        {!data.length ? <Loader/> : sortedData?.map(item => <li\n          onClick={() => handleItemClick && handleItemClick(item.props.children[0].props.children)}\n          className={styles.row} style={{gridTemplateColumns: columns}}>{item}</li>)}\n      </ul>\n    </div>\n  );\n}\n\nexport default DataList;","import {useEffect, useState} from \"react\";\nimport {client} from \"../api/client\";\nimport {GET_CLASSROOMS} from \"../api/operations/queries/classrooms\";\nimport {ISODateString} from \"../helpers/helpers\";\nimport {ClassroomType, User} from \"../models/models\";\nimport {gql, useQuery} from \"@apollo/client\";\nimport {GET_USERS} from \"../api/operations/queries/users\";\n\nconst useUsers = (): Array<User> => {\n  const [users, setUsers] = useState<User[]>([]);\n\n  useEffect(() => {\n    client.query({query: GET_USERS}).then((data) => {\n        setUsers(data.data.users.slice().sort((a: User, b: User) => a.id - b.id));\n      });\n  }, []);\n\n  return users;\n};\n\nexport default useUsers;","import React, {useEffect, useState} from \"react\";\r\nimport styles from \"./users.module.css\";\r\nimport mainStyles from \"./../../styles/main.module.css\";\r\nimport Header from \"../../components/header/Header\";\r\nimport {User, UserTypeColors, UserTypes, UserTypesUa} from \"../../models/models\";\r\nimport {fullName} from \"../../helpers/helpers\";\r\nimport {usePopupWindow} from \"../../components/popupWindow/PopupWindowProvider\";\r\nimport UserProfile from \"../../components/userProfile/UserProfile\";\r\nimport {CategoryType} from \"../../styles/selectStyles\";\r\nimport Edit from \"../../components/icons/edit/Edit\";\r\nimport HeaderSelect from \"../../components/headerSelect/HeaderSelect\";\r\nimport DataList from \"../../components/dataList/DataList\";\r\nimport useUsers from \"../../hooks/useUsers\";\r\n\r\nconst categories: CategoryType[] = [\r\n  {\r\n    value: 'ALL',\r\n    label: 'Всі',\r\n  },\r\n  {\r\n    value: UserTypes.TEACHER,\r\n    label: 'Викладачі'\r\n  },\r\n  {\r\n    value: UserTypes.STUDENT,\r\n    label: 'Студенти'\r\n  },\r\n  {\r\n    value: UserTypes.POST_GRADUATE,\r\n    label: 'Аистенти/Аспіранти'\r\n  },\r\n  {\r\n    value: UserTypes.CONCERTMASTER,\r\n    label: 'Концертмейстери'\r\n  },\r\n  {\r\n    value: UserTypes.ILLUSTRATOR,\r\n    label: 'Іллюстратори'\r\n  }\r\n];\r\n\r\nconst listHeader = ['ID', 'П.І.Б.', 'Статус'];\r\n\r\nconst Users = () => {\r\n  const users = useUsers();\r\n  const dispatchPopupWindow = usePopupWindow();\r\n  const [searchValue, setSearchValue] = useState('');\r\n  const [filteredUsers, setFilteredUsers] = useState<User[]>(users);\r\n\r\n  useEffect(() => {\r\n    setFilteredUsers(users);\r\n  }, [users]);\r\n\r\n  const handleClick = (user: User) => {\r\n    dispatchPopupWindow({\r\n      header: <h1>{fullName(user)}</h1>,\r\n      body: <UserProfile userId={user.id as number}/>,\r\n    });\r\n  };\r\n\r\n  const handleSearch = (e: any) => {\r\n    setSearchValue(e.target.value);\r\n    if (e.target.value) {\r\n      const filter = users\r\n        .filter((user: User) => (fullName(user) + user.id).includes(e.target.value));\r\n\r\n      setFilteredUsers(filter);\r\n    } else {\r\n      setFilteredUsers(users);\r\n    }\r\n  };\r\n\r\n  const handleSelectCategory = (e: any) => {\r\n    const filter = users.filter((user: User) => user.type === e.value);\r\n    if (e.value !== 'ALL') {\r\n      setFilteredUsers(filter);\r\n    } else {\r\n      setFilteredUsers(users);\r\n    }\r\n  };\r\n\r\n  const listData = filteredUsers?.map((user: User) => <>\r\n      <span>{user.id}</span>\r\n      <span onClick={() => handleClick(user)}>{fullName(user)}</span>\r\n      <span className={styles.userType} style={{backgroundColor: UserTypeColors[user.type as UserTypes]}}>\r\n        {UserTypesUa[user.type as UserTypes]}\r\n      </span>\r\n    </>);\r\n\r\n  return (\r\n    <>\r\n      <Header>\r\n        <h1>Користувачі</h1>\r\n        <input\r\n          type=\"text\"\r\n          value={searchValue}\r\n          onChange={handleSearch}\r\n          placeholder=\"Пошук за П.І.Б або ID\"\r\n          className={mainStyles.headerInput}\r\n        />\r\n        <HeaderSelect options={categories} onChange={handleSelectCategory}/>\r\n        <Edit path='/adminUsers'/>\r\n      </Header>\r\n      <DataList header={listHeader} data={listData} gridTemplateColumns={'20px 3fr 200px'}/>\r\n    </>\r\n  );\r\n};\r\n\r\nexport default Users;\r\n","import React from \"react\";\r\nimport styles from \"./profile.module.css\";\r\nimport Header from \"../../components/header/Header\";\r\n\r\nconst Profile = () => {\r\n  return (\r\n    <div>\r\n      <Header><h1>Профіль</h1></Header>\r\n      Профіль\r\n    </div>\r\n  );\r\n};\r\n\r\nexport default Profile;\r\n","import {useEffect, useState} from \"react\";\nimport {client} from \"../api/client\";\nimport {GET_CLASSROOMS} from \"../api/operations/queries/classrooms\";\nimport {ISODateString} from \"../helpers/helpers\";\nimport {ClassroomType} from \"../models/models\";\nimport {gql, useQuery} from \"@apollo/client\";\n\nconst useClassrooms = (props?: any): Array<ClassroomType> => {\n  const [classrooms, setClassrooms] = useState<ClassroomType[]>([]);\n  const { data } = useQuery(gql`\n    query gridUpdate {\n      gridUpdate @client\n    }\n  `);\n\n  useEffect(() => {\n    client\n      .query({\n        query: GET_CLASSROOMS,\n        variables: { date: ISODateString(props?.date ? props.date : new Date()) },\n        fetchPolicy: 'network-only'\n      })\n      .then((data) => {\n        setClassrooms(\n          data.data.classrooms\n            .slice()\n            .sort(\n              (a: ClassroomType, b: ClassroomType) =>\n                parseInt(a.name) - parseInt(b.name)\n            )\n        );\n      });\n  }, [data.gridUpdate]);\n\n  return classrooms;\n};\n\nexport default useClassrooms;","import {gql} from \"@apollo/client\";\n\nexport const CREATE_CLASSROOM = gql`\n    mutation createOneClassroom($data: ClassroomCreateInput!) {\n        createOneClassroom(data: $data) {\n            name\n        }\n    }\n`;","import {StylesConfig} from \"react-select\";\n\nexport type CategoryType = {\n  value: string;\n  label: string;\n};\n\ntype isMulti = false;\n\nexport const selectStyles: StylesConfig<CategoryType, isMulti> = ({\n  control: (provided, state) => ({\n    ...provided,\n    backgroundColor: '#2e287c',\n    border: '1px solid #fff',\n    borderRadius: 8,\n    width: 160,\n    color: '#fff',\n  }),\n  placeholder: (provided) => ({\n    ...provided,\n    color: '#fff',\n  }),\n  menuList: (provided) => ({\n    ...provided,\n    color: '#000',\n  }),\n  singleValue: (provided) => ({\n    ...provided,\n    color: '#fff',\n  }),\n  indicatorSeparator: () => ({display: 'none'})\n});\n\nexport const selectLightStyles: StylesConfig<CategoryType, isMulti> = ({\n  control: (provided, state) => ({\n    ...provided,\n    backgroundColor: '#fff',\n    border: '1px solid #2e287c',\n    borderRadius: 8,\n    color: '#000',\n  }),\n  placeholder: (provided) => ({\n    ...provided,\n    color: '#ccc',\n  }),\n  menuList: (provided) => ({\n    ...provided,\n    color: '#000',\n  }),\n  singleValue: (provided) => ({\n    ...provided,\n    color: '#000',\n  }),\n  indicatorSeparator: () => ({display: 'none'}),\n  menuPortal: base => ({...base, zIndex: 9999})\n});","import { gql } from \"@apollo/client\";\n\nexport const GET_INSTRUMENTS = gql`\n    query getInstruments($where: InstrumentWhereInput!) {\n        instruments(where: $where) {\n            id\n            persNumber\n            type\n            name\n            rate\n            classroom {\n              id\n              name\n            }\n        }\n    }\n`;","import {useEffect, useState} from \"react\";\nimport {client} from \"../api/client\";\nimport {GET_CLASSROOMS} from \"../api/operations/queries/classrooms\";\nimport {ISODateString} from \"../helpers/helpers\";\nimport {ClassroomType, InstrumentType, User} from \"../models/models\";\nimport {gql, useQuery} from \"@apollo/client\";\nimport {GET_USERS} from \"../api/operations/queries/users\";\nimport {GET_INSTRUMENTS} from \"../api/operations/queries/instruments\";\n\nconst useInstruments = (updateList: boolean): Array<InstrumentType> => {\n  const [instruments, setInstruments] = useState<InstrumentType[]>([]);\n\n  useEffect(() => {\n    client.query({query: GET_INSTRUMENTS, variables: {\n      where: {\n      }\n      },\n      fetchPolicy: 'network-only'\n    }).then((data) => {\n        setInstruments(data.data.instruments\n          .slice().sort((a: InstrumentType, b: InstrumentType) => a.id - b.id));\n      });\n  }, [updateList]);\n\n  return instruments;\n};\n\nexport default useInstruments;","import { gql } from \"@apollo/client\";\r\n\r\nexport const GET_DEPARTMENTS = gql`\r\n    query getDepartments($where: DepartmentWhereInput!) {\r\n        departments(where: $where) {\r\n            id\r\n            name\r\n            faculty {\r\n              id\r\n              name\r\n            }\r\n        }\r\n    }\r\n`;","import {useEffect, useState} from \"react\";\nimport {client} from \"../api/client\";\nimport {Department} from \"../models/models\";\nimport {GET_DEPARTMENTS} from \"../api/operations/queries/departments\";\n\nconst useDepartments = (updateList: boolean): Array<Department> => {\n  const [departments, setDepartments] = useState<Department[]>([]);\n\n  useEffect(() => {\n    client.query({query: GET_DEPARTMENTS, variables: {\n      where: {\n      }\n      },\n      fetchPolicy: 'network-only'\n    }).then((data) => {\n      setDepartments(data.data.departments\n          .slice().sort((a: Department, b: Department) => a.id - b.id));\n      });\n  }, [updateList]);\n\n  return departments;\n};\n\nexport default useDepartments;","export default __webpack_public_path__ + \"static/media/addLined.6de27fe6.svg\";","import React, {useEffect, useState, Fragment} from 'react';\nimport styles from './createClassroomPopupBody.module.css';\nimport Select, {components} from \"react-select\";\nimport {useMutation} from \"@apollo/client\";\nimport {ClassroomType, Department, InstrumentType} from \"../../../../models/models\";\nimport {useForm} from \"react-hook-form\";\nimport {CREATE_CLASSROOM} from \"../../../../api/operations/mutations/createClassroom\";\nimport {GET_CLASSROOMS} from \"../../../../api/operations/queries/classrooms\";\nimport {client, gridUpdate} from \"../../../../api/client\";\nimport {ISODateString} from \"../../../../helpers/helpers\";\nimport TextArea from \"antd/es/input/TextArea\";\nimport {selectLightStyles} from \"../../../../styles/selectStyles\";\nimport useInstruments from \"../../../../hooks/useInstruments\";\nimport mainStyles from \"../../../../styles/main.module.css\";\nimport useDepartments from \"../../../../hooks/useDepartments\";\nimport addIcon from '../../../../assets/images/addLined.svg';\n\ninterface PropTypes {\n  dispatch: (value: any) => void;\n  dispatchNotification: (value: any) => void;\n  item?: ClassroomType;\n}\n\nconst CreateClassroomPopupBody: React.FC<PropTypes> = ({item, ...props}) => {\n  const departmentsData = useDepartments(true);\n  const instrumentsData = useInstruments(true);\n  const [createClassroom] = useMutation(CREATE_CLASSROOM);\n  const [departments, setDepartments] = useState<any>([]);\n  const [selectedDepartment, setSelectedDepartment] = useState<any>();\n  const [instruments, setInstruments] = useState<any>([]);\n  const [selectedInstruments, setSelectedInstruments] = useState<any>([]);\n  const [freeInstrumentsOnly, setFreeInstrumentsOnly] = useState(true);\n  const {register, handleSubmit, setValue, watch, formState: {errors}} = useForm();\n\n  useEffect(() => {\n    setDepartments(departmentsData.map((dep: Department) => ({value: dep.id, label: dep.name})));\n    if (item && item.chair) {\n      setSelectedDepartment({value: item.chair.id, label: item.chair.name});\n    }\n  }, [departmentsData]);\n\n  useEffect(() => {\n    if (freeInstrumentsOnly && instrumentsData) {\n      const filteredInstruments = instrumentsData.filter(item => !item.classroom);\n\n      setMappedInstruments(filteredInstruments);\n    } else {\n      setMappedInstruments(instrumentsData);\n    }\n  }, [freeInstrumentsOnly, instrumentsData]);\n\n  useEffect(() => {\n    if (item && item.instruments) {\n      const itemInstruments = item.instruments\n        .map(({id, name, type, persNumber}) => ({\n          value: id, label: name + ', ' + type + (persNumber ? ' - ' + persNumber :  '')\n        }));\n      setSelectedInstruments(itemInstruments);\n    }\n  }, [])\n\n  const setMappedInstruments = (data: InstrumentType[]) => {\n    setInstruments(data.map((item) => ({\n      value: item.id, label: item.name + ', ' + item.type + ' - ' + item.persNumber\n    })));\n  };\n\n  const onSubmit = async (data: any) => {\n    await createClassroom({\n      variables: {\n        data: {\n          name: data.name,\n          special: data.special ? 'PIANO' : undefined,\n          floor: Number(data.floor),\n          isWing: data.isWing,\n          isOperaStudio: data.isOperaStudio,\n          description: data.description,\n          chair: selectedDepartment ? {connect: {id: selectedDepartment.value}} : undefined,\n          instruments: selectedInstruments.length > 0\n            ? {connect: selectedInstruments.map((item: any) => ({id: item.value}))} : undefined,\n          orderIndex: 0,\n        }\n      }\n    });\n    await client.query({\n      query: GET_CLASSROOMS,\n      variables: {date: ISODateString(new Date())},\n      fetchPolicy: 'network-only',\n    });\n    gridUpdate(!gridUpdate());\n    props.dispatch({\n      type: \"POP_POPUP_WINDOW\",\n    });\n    props.dispatchNotification({\n      header: \"Успішно!\",\n      message: `Аудиторія ${data.name}  створена.`,\n      type: \"ok\",\n    });\n  };\n\n  const handleSelectDepartment = (e: any) => {\n    setSelectedDepartment(e);\n  };\n\n  const handleSelectInstrument = (e: any) => {\n    setSelectedInstruments([...e]);\n  };\n\n  const handleFreeInstruments = () => {\n    setFreeInstrumentsOnly(prevState => !prevState);\n  };\n\n  const DropdownIndicator = () => {\n    return <img src={addIcon} alt=\"Додати\" className={styles.addInstrumentIcon}/>\n  };\n\n  const MenuList = (props: any) => {\n    return (\n      <Fragment>\n        <div>\n          <span className={styles.instrumentsCheckbox}>\n          <input type=\"checkbox\" checked={freeInstrumentsOnly} onChange={handleFreeInstruments}/>\n          Вибирати серед інструментів без аудиторій\n        </span>\n        </div>\n        <components.MenuList {...props}>{props.children}</components.MenuList>\n      </Fragment>\n    );\n  };\n\n  return <div className={styles.wrapper}>\n    <form className={styles.container} onSubmit={handleSubmit(onSubmit)} id='createClassroom'>\n      {errors.name && <span className={mainStyles.required}>Обов'язкове поле</span>}\n      <label>Назва\n        <input\n          placeholder=\"Не більше 5 символів\"\n          maxLength={5}\n          defaultValue={item ? item.name : undefined}\n          {...register(\"name\", {required: true})}\n        />\n      </label>\n      <label>Опис\n        <TextArea\n          showCount\n          maxLength={100}\n          onChange={(e) => setValue('description', e.target.value)}\n          placeholder=\"Не більше 100 символів\"\n          defaultValue={item ? item.description as string : undefined}\n        />\n      </label>\n      {departmentsData &&\n      <label>Кафедра\n          <Select\n              value={selectedDepartment}\n              onChange={handleSelectDepartment}\n              options={departments}\n            //@ts-ignore\n              styles={selectLightStyles}\n              menuPortalTarget={document.body}\n              isClearable\n              isSearchable\n              placeholder='Виберіть кафедру'\n              noOptionsMessage={() => 'Кафедри відсутні'}\n          />\n      </label>}\n      <label>Спеціалізована\n        <input {...register(\"special\")} type=\"checkbox\"\n               defaultChecked={item ? Boolean(item.special) : false}/>\n      </label>\n      <label>Флігель\n        <input {...register(\"isWing\")} type=\"checkbox\"\n               defaultChecked={item ? item.isWing : false}/>\n      </label>\n      <label>Оперна студія\n        <input {...register(\"isOperaStudio\")} type=\"checkbox\"\n               defaultChecked={item ? item.isOperaStudio : false}/>\n      </label>\n      <label>Поверх\n        <input {...register(\"floor\")} type=\"number\" min={1} max={4}\n               defaultValue={item ? item.floor as number : 1}/>\n      </label>\n      <label>Інструменти\n        <Select options={instruments}\n          //@ts-ignore\n                styles={selectLightStyles}\n                menuPortalTarget={document.body}\n                value={selectedInstruments}\n                onChange={handleSelectInstrument}\n                components={{DropdownIndicator, MenuList}}\n                isSearchable\n                isClearable={false}\n                isMulti\n                placeholder='Додати інструмент'\n                noOptionsMessage={() => 'Інструменти відсутні'}\n        />\n      </label>\n    </form>\n  </div>\n};\n\nexport default CreateClassroomPopupBody;","import React, { useEffect, useState } from \"react\";\nimport styles from \"./notification.module.css\";\n\ninterface PropTypes {\n  message: string;\n  header: string;\n  dispatch: (value: any) => void;\n  id: string;\n  type?: \"ok\" | \"alert\";\n}\n\nconst Notification: React.FC<PropTypes> = ({\n  message,\n  type = \"default\",\n  dispatch,\n  id,\n  header,\n}) => {\n  const [exit, setExit] = useState(false);\n  const [opacity, setOpacity] = useState(100);\n  const [intervalId, setIntervalId]: any = useState(null);\n\n  const handleStartTimer = () => {\n    const id = setInterval(() => {\n      setOpacity((prevState) => {\n        if (prevState > 95) {\n          return prevState - 0.02;\n        } else if (prevState > 1) {\n          return prevState - 0.5;\n        } else {\n          handleCloseNotification();\n          return prevState;\n        }\n      });\n    }, 10);\n    setIntervalId(id);\n  };\n\n  const handlePauseTimer = () => {\n    clearInterval(intervalId);\n    setOpacity(100);\n  };\n\n  const handleCloseNotification = () => {\n    clearInterval(intervalId);\n    setExit(true);\n    setTimeout(() => {\n      dispatch({\n        type: \"REMOVE_NOTIFICATION\",\n        id: id,\n      });\n    }, 400);\n  };\n\n  useEffect(() => {\n    if (opacity < 1) {\n      handleCloseNotification();\n    }\n  }, [opacity]);\n\n  useEffect(() => {\n    handleStartTimer();\n  }, []);\n\n  return (\n    <div\n      onMouseEnter={handlePauseTimer}\n      onMouseLeave={handleStartTimer}\n      className={[styles.notification, exit ? styles.exit : \"\"].join(\" \")}\n      style={{ opacity: `${opacity / 100}` }}\n    >\n      <span\n        className={styles.notificationClose}\n        onClick={handleCloseNotification}\n      />\n      <p\n        className={[\n          type === \"ok\"\n            ? styles.ok\n            : type === \"alert\"\n            ? styles.alert\n            : styles.default\n        , styles.header].join(\" \")}\n      >\n        {header}\n      </p>\n      <p className={styles.message}>{message}</p>\n    </div>\n  );\n};\n\nexport default Notification;\n","import React, { createContext, useContext, useReducer } from \"react\";\r\nimport { v4 } from \"uuid\";\r\nimport styles from \"./notification.module.css\";\r\nimport Notification from \"./Notification\";\r\n\r\nexport const NotificationContext = createContext({});\r\n\r\nconst NotificationProvider = ({ children }: any) => {\r\n  const [state, dispatch] = useReducer((state: any, action: any) => {\r\n    switch (action.type) {\r\n      case \"ADD_NOTIFICATION\":\r\n        return [...state, { ...action.payload }];\r\n      case \"REMOVE_NOTIFICATION\": {\r\n        return state.filter((el: any) => el.id !== action.id);\r\n      }\r\n      default:\r\n        return state;\r\n    }\r\n  }, []);\r\n  return (\r\n    <NotificationContext.Provider value={dispatch}>\r\n      <div className={styles.notificationWrapper}>\r\n        {state.map((note: any) => (\r\n          <Notification\r\n            dispatch={dispatch}\r\n            key={note.id}\r\n            message={note.message}\r\n            header={note.header}\r\n            id={note.id}\r\n            type={note.type}\r\n          />\r\n        ))}\r\n      </div>\r\n      {children}\r\n    </NotificationContext.Provider>\r\n  );\r\n};\r\n\r\nexport const useNotification = () => {\r\n  const dispatch = useContext(NotificationContext);\r\n  return (props: any) => {\r\n    // @ts-ignore\r\n    dispatch({\r\n      type: \"ADD_NOTIFICATION\",\r\n      payload: {\r\n        id: v4(),\r\n        ...props,\r\n      },\r\n    });\r\n  };\r\n};\r\n\r\nexport default NotificationProvider;\r\n","import {gql} from \"@apollo/client\";\n\nexport const DELETE_CLASSROOM = gql`\n    mutation deleteOneClassroom($where: ClassroomWhereUniqueInput!) {\n        deleteOneClassroom(where: $where) {\n            name\n        }\n    }\n`;","export default __webpack_public_path__ + \"static/media/add.876027ca.svg\";","import React from 'react';\nimport addIcon from \"../../../assets/images/add.svg\";\nimport styles from \"./add.module.css\";\n\ninterface PropTypes {\n  onClick: (value?: any) => void;\n}\n\nconst Add: React.FC<PropTypes> = ({onClick}) => {\n\n  return (\n    <img src={addIcon} className={styles.addIcon} onClick={onClick}/>\n  );\n}\n\nexport default Add;","export default __webpack_public_path__ + \"static/media/delete.e18a574b.svg\";","import React from 'react';\nimport deleteIcon from \"../../../assets/images/delete.svg\";\nimport styles from \"./delete.module.css\";\n\ninterface PropTypes {\n  onClick?: (value?: any) => void;\n}\n\nconst Delete: React.FC<PropTypes> = ({onClick}) => {\n\n  return (\n    <img src={deleteIcon} className={styles.deleteIcon} onClick={(e) => {\n      e.stopPropagation();\n      onClick && onClick();\n    }}/>\n  );\n}\n\nexport default Delete;","import React from 'react';\nimport {ClassroomType} from \"../../../../models/models\";\nimport styles from './browseClassroomPopupBody.module.css';\n\ninterface PropTypes {\n  classroom: ClassroomType;\n}\n\nconst BrowseClassroomPopupBody: React.FC<PropTypes> = ({classroom}) => {\n  return (\n    <div className={styles.list}>\n      <div><span>ID: </span><span>{classroom.id}</span></div>\n      <div><span>Назва: </span><span>{classroom.name}</span></div>\n      <div><span>Опис: </span><span>{classroom.description}</span></div>\n      <div><span>Поверх: </span><span>{classroom.floor}</span></div>\n      <div><span>Кафедра: </span><span>{classroom.chair ? classroom.chair.name : '-'}</span></div>\n      <div><span>Спеціалізована: </span><span>{classroom.special ? 'так' : 'ні'}</span></div>\n      <div><span>Флігель: </span><span>{classroom.isWing ? 'так' : 'ні'}</span></div>\n      <div><span>Оперна студія: </span><span>{classroom.isOperaStudio ? 'так' : 'ні'}</span></div>\n      <div><span>Інструменти: </span>{classroom.instruments?.length > 0 ? <ul className={styles.instruments}>\n        {classroom.instruments.map(item => <li key={item.id}>{item.name}</li>)}\n      </ul> : '-'}</div>\n    </div>\n  );\n}\n\nexport default BrowseClassroomPopupBody;","import React, {useEffect, useState} from 'react';\nimport Header from '../../../components/header/Header';\nimport styles from './adminClassrooms.module.css';\nimport {ClassroomType} from \"../../../models/models\";\nimport useClassrooms from \"../../../hooks/useClassrooms\";\nimport {usePopupWindow} from \"../../../components/popupWindow/PopupWindowProvider\";\nimport CreateClassroomPopupBody from \"./createClassroomPopupBody/CreateClassroomPopupBody\";\nimport {useNotification} from \"../../../components/notification/NotificationProvider\";\nimport {useMutation} from \"@apollo/client\";\nimport {DELETE_CLASSROOM} from \"../../../api/operations/mutations/deleteClassroom\";\nimport Add from \"../../../components/icons/add/Add\";\nimport Edit from \"../../../components/icons/edit/Edit\";\nimport Delete from \"../../../components/icons/delete/Delete\";\nimport DataList from \"../../../components/dataList/DataList\";\nimport Button from \"../../../components/button/Button\";\nimport BrowseClassroomPopupBody from \"./browseClassroomPopupBody/BrowseClassroomPopupBody\";\n\nconst listHeader = ['ID', 'Назва', 'Кафедра', 'Спец.', 'Оп. студія', 'Флігель'];\n\nconst AdminClassrooms = () => {\n  const classrooms: ClassroomType[] = useClassrooms();\n  const [listData, setListData] = useState<any>([]);\n  const dispatchPopupWindow = usePopupWindow();\n  const dispatchNotification = useNotification();\n  const [deleteClassroom] = useMutation(DELETE_CLASSROOM);\n  const dataItem = (item: ClassroomType) => <>\n    <span className={styles.centerText}>{item.id}</span>\n    <span className={styles.centerText}>{item.name}</span>\n    <span>{item.chair?.name}</span>\n    <span className={styles.centerText}>{item.special ? 'Так' : 'Ні'}</span>\n    <span className={styles.centerText}>{item.isOperaStudio ? 'Так' : 'Ні'}</span>\n    <span className={styles.centerText}>{item.isWing ? 'Так' : 'Ні'}</span>\n    <Edit dark onClick={() => handleCreate(item)}/>\n    <Delete onClick={() => handleDelete(item.id)}/>\n  </>;\n\n  useEffect(() => {\n    const data = classrooms.map(item => dataItem(item));\n\n    setListData(data);\n  }, [classrooms]);\n\n  const handleErrorDetails = (e: any) => {\n    dispatchPopupWindow({\n      header: <h1>{e.name}</h1>,\n      body: <>\n        <p>{e.message}</p>\n        <p>{e.extraInfo}</p>\n        <pre>{e.stack}</pre>\n      </>,\n      footer: ''\n    });\n  };\n\n  const handleDelete = async (id: number) => {\n    const confirm = window.confirm('Ви дійсно бажаєте видалити аудиторію?');\n\n    if (confirm) {\n      try {\n        await deleteClassroom({variables: {where: {id}}});\n        dispatchNotification({\n          header: \"Успішно!\",\n          message: `Аудиторію видалено.`,\n          type: \"ok\",\n        });\n      } catch (e) {\n        console.log(e)\n        dispatchNotification({\n          header: \"Помилка!\",\n          message:  <><span>Щось пішло не так.</span><br/>\n            <span style={{color: '#2b5dff', cursor: 'pointer', textDecoration: 'underline' }}\n                  onClick={() => handleErrorDetails && handleErrorDetails(e)}>Деталі</span></>,\n          type: \"alert\",\n        });\n      }\n    }\n  };\n\n  const handleCreate = (item: ClassroomType | null = null) => {\n    dispatchPopupWindow({\n      header: <h1>{item ? 'Редагування аудиторії' : 'Створити аудиторію'}</h1>,\n      //@ts-ignore\n      body: <CreateClassroomPopupBody dispatchNotification={dispatchNotification} item={item}/>,\n      footer: <Button type='submit' form='createClassroom'>\n        {item ? 'Зберегти зміни' : 'Створити'}\n      </Button>\n    });\n  };\n\n  const handleItemClick = (id: number) => {\n    const classroom = classrooms?.find(item => item.id === id);\n\n    dispatchPopupWindow({\n      header: <h1>{`Аудиторія ${classroom?.name}`}</h1>,\n      body: <BrowseClassroomPopupBody classroom={classroom as ClassroomType}/>,\n      footer: ''\n    });\n  };\n\n  return (\n    <div>\n      <Header>\n        <h1>Редагування аудиторій</h1>\n        <Add onClick={() => handleCreate()}/>\n      </Header>\n      <DataList header={listHeader} data={listData} handleItemClick={handleItemClick}\n                gridTemplateColumns={'40px 40px 1fr 100px 80px 80px 40px 40px'}/>\n    </div>\n  );\n}\n\nexport default AdminClassrooms;","import React from 'react';\nimport styles from \"./browseUserPopupBody.module.css\";\nimport {EmploymentTypes, EmploymentTypesUa, User, UserTypes, UserTypesUa} from \"../../../../models/models\";\nimport {fullName} from \"../../../../helpers/helpers\";\n\ninterface PropTypes {\n  user: User;\n};\n\nconst BrowseUserPopupBody: React.FC<PropTypes> = ({user}) => {\n  return (\n    <div>\n      <div className={styles.list}>\n        <div><span>ID: </span><span>{user.id}</span></div>\n        <div><span>П.І.Б.: </span><span>{fullName(user)}</span></div>\n        <div><span>Статус: </span><span>{UserTypesUa[user.type as UserTypes]}</span></div>\n        {user.studentInfo && <div><span>Ступінь: </span><span>{user.studentInfo.degree.name}</span></div>}\n        {user.employeeInfo && <div><span>Зайнятість: </span>\n            <span>{EmploymentTypesUa[user.employeeInfo.employmentType as EmploymentTypes]}</span></div>}\n        <div><span>Кафедра: </span><span>{user.department ? user.department.name : 'Немає'}</span></div>\n        <div><span>E-mail: </span><span>{user.email}</span></div>\n        <div><span>Тел.: </span><span>{user.phoneNumber}</span></div>\n        {user?.extraPhoneNumbers && <div><span>Інші тел.: </span>\n          <ul>{JSON.parse(user.extraPhoneNumbers).map((item: string) => <li>{item}</li>)}</ul>\n        </div>}\n      </div>\n    </div>\n  );\n}\n\nexport default BrowseUserPopupBody;","import React, {useEffect, useState} from 'react';\nimport Header from '../../../components/header/Header';\nimport styles from './adminUsers.module.css';\nimport {User, UserTypes, UserTypesUa} from \"../../../models/models\";\nimport {usePopupWindow} from \"../../../components/popupWindow/PopupWindowProvider\";\nimport {useNotification} from \"../../../components/notification/NotificationProvider\";\nimport {useQuery} from \"@apollo/client\";\nimport {GET_USERS} from \"../../../api/operations/queries/users\";\nimport {fullName} from \"../../../helpers/helpers\";\nimport mainStyles from \"../../../styles/main.module.css\";\nimport Select from \"react-select\";\nimport {CategoryType, selectStyles} from \"../../../styles/selectStyles\";\nimport {useHistory} from \"react-router-dom\";\nimport UserProfile from \"../../../components/userProfile/UserProfile\";\nimport Add from \"../../../components/icons/add/Add\";\nimport Edit from \"../../../components/icons/edit/Edit\";\nimport Delete from \"../../../components/icons/delete/Delete\";\nimport DataList from \"../../../components/dataList/DataList\";\nimport BrowseUserPopupBody from \"./browseUserPopupBody/BrowseUserPopupBody\";\nimport Button from \"../../../components/button/Button\";\n\nconst categories: CategoryType[] = [\n  {\n    value: 'ALL',\n    label: 'Всі',\n  },\n  {\n    value: UserTypes.TEACHER,\n    label: 'Викладачі'\n  },\n  {\n    value: UserTypes.STUDENT,\n    label: 'Студенти'\n  },\n  {\n    value: UserTypes.POST_GRADUATE,\n    label: 'Аистенти/Аспіранти'\n  },\n  {\n    value: UserTypes.CONCERTMASTER,\n    label: 'Концертмейстери'\n  },\n  {\n    value: UserTypes.ILLUSTRATOR,\n    label: 'Іллюстратори'\n  }\n];\n\nconst listHeader = ['ID', 'П.І.Б.', '', 'Статус']\n\nconst AdminUsers = () => {\n  const {data, loading, error} = useQuery(GET_USERS);\n  const dispatchPopupWindow = usePopupWindow();\n  const dispatchNotification = useNotification();\n  const [searchValue, setSearchValue] = useState('');\n  const [filteredUsers, setFilteredUsers] = useState<User[]>([]);\n  const history = useHistory();\n  const [listData, setListData] = useState<any[]>([]);\n  const user = (item: User) => <>\n    <span className={styles.alignText}>{item.id}</span>\n    <span>{fullName(item)}</span>\n    <span>{item.verified ? '' : <Button color='red'>Верифікувати</Button>}</span>\n    <span className={styles.alignText}>{UserTypesUa[item.type as UserTypes]}</span>\n    <Edit dark onClick={() => handleAdd()}/>\n    <Delete onClick={() => handleDelete()}/>\n  </>;\n\n  const handleDelete = () => {\n\n  };\n\n  const handleAdd = () => {\n\n  };\n\n  const handleCreate = () => {\n    dispatchPopupWindow({\n      header: <h1>Створити нового користувача</h1>,\n      //@ts-ignore\n      body: 'test',\n      footer: ''\n    });\n  };\n\n  useEffect(() => {\n    setFilteredUsers(data?.users)\n  }, [data]);\n\n  useEffect(() => {\n    setListData(filteredUsers?.map(item => user(item)));\n  }, [filteredUsers]);\n\n  const handleClick = (user: User) => {\n    dispatchPopupWindow({\n      header: <h1>{fullName(user)}</h1>,\n      body: <UserProfile userId={user.id as number}/>,\n    });\n  };\n\n  const handleSearch = (e: any) => {\n    setSearchValue(e.target.value);\n    if (e.target.value) {\n      const filter = data.users\n        .filter((user: User) => (fullName(user).toLowerCase() + user.id).includes(e.target.value.toLowerCase()));\n\n      setFilteredUsers(filter);\n    } else {\n      setFilteredUsers(data.users);\n    }\n  };\n\n  const handleSelectCategory = (e: any) => {\n    const filter = data.users.filter((user: User) => user.type === e.value);\n    if (e.value !== 'ALL') {\n      setFilteredUsers(filter);\n    } else {\n      setFilteredUsers(data.users);\n    }\n  }\n\n  const handleItemClick = (id: number) => {\n    const user = data.users?.find((item: User) => item.id === id);\n\n    dispatchPopupWindow({\n      header: <h1>{fullName(user)}</h1>,\n      body: <BrowseUserPopupBody user={user}/>,\n      footer: ''\n    });\n  };\n\n  return (\n    <div>\n      <Header>\n        <h1>Управління користувачами</h1>\n        <input\n          type=\"text\"\n          value={searchValue}\n          onChange={handleSearch}\n          placeholder=\"Пошук за П.І.Б або ID\"\n          className={mainStyles.headerInput}\n        />\n        <Select\n          options={categories}\n          defaultValue={categories[0]}\n          onChange={handleSelectCategory}\n          styles={selectStyles}/>\n        <Add onClick={handleCreate}/>\n      </Header>\n      <div className={styles.wrapper}>\n        <DataList header={listHeader} data={listData} handleItemClick={handleItemClick}\n                  gridTemplateColumns='40px 1fr 100px 200px 40px 40px'/>\n      </div>\n    </div>\n  );\n}\n\nexport default AdminUsers;","import React, {useEffect, useState} from \"react\";\nimport styles from \"./admin.module.css\";\nimport mainStyles from '../../../styles/main.module.css';\nimport Header from \"../../../components/header/Header\";\nimport { NavLink } from \"react-router-dom\";\nimport Button from \"../../../components/button/Button\";\nimport {useQuery} from \"@apollo/client\";\nimport {GET_USERS} from \"../../../api/operations/queries/users\";\nimport {User} from \"../../../models/models\";\nimport CountUp from \"react-countup\";\n\nconst Admin = () => {\n  const serverURL = localStorage.getItem('serverURL');\n  const [value, setValue] = useState('');\n  const {data, loading, error} = useQuery(GET_USERS);\n  const [unverifiedCounter, setUnverifiedCounter] = useState(0);\n\n  useEffect(() => {\n    setUnverifiedCounter(0);\n    if (data) {\n      data.users.forEach((user: User) => {\n        !user.verified && setUnverifiedCounter(prevState => prevState+1);\n      });\n    }\n  }, [data]);\n\n  useEffect(() => {\n    if (serverURL) {\n      setValue(serverURL);\n    } else {\n      setValue('http://localhost:4000/');\n      localStorage.setItem('serverURL', value);\n    }\n  }, [serverURL]);\n\n  const handleChange = (e: any) => {\n    setValue(e.target.value);\n  };\n\n  const handleSubmit = () => {\n    localStorage.setItem('serverURL', value);\n  };\n\n  return (\n    <div>\n      <Header><h1>Налаштування</h1></Header>\n      <ul className={styles.list}>\n        <li><NavLink to='/adminClassrooms'>Аудиторії</NavLink></li>\n        <li><NavLink to='/adminUsers'>Користувачі\n          {unverifiedCounter !== 0 && <span className={styles.unverified} title=\"Неверифіковані\">\n            <CountUp end={unverifiedCounter} duration={1}/></span>}\n        </NavLink></li>\n        <li><NavLink to='/adminInstruments'>Інструменти</NavLink></li>\n        <li><NavLink to='/adminDepartments'>Кафедри</NavLink></li>\n        <li><NavLink to='/adminFaculties'>Факультети</NavLink></li>\n        <li><NavLink to='/adminDegrees'>Навчальні ступені</NavLink></li>\n        <li><NavLink to='/adminSchedule'>Розклад</NavLink></li>\n      </ul>\n      <div className={styles.settings}>\n      <label className={styles.serverURL}>\n        Server URL:\n        <input type=\"text\" className={mainStyles.input} value={value as string} onChange={handleChange}/>\n      </label>\n      <Button onClick={handleSubmit}>Змінити</Button>\n      </div>\n    </div>\n  );\n};\n\nexport default Admin;","export default __webpack_public_path__ + \"static/media/uprightPiano.d46096d2.svg\";","export default __webpack_public_path__ + \"static/media/grandPiano.11b5ee42.svg\";","export default __webpack_public_path__ + \"static/media/star.886f8113.svg\";","import React from \"react\";\r\nimport styles from \"./instruments.module.css\";\r\nimport { InstrumentType } from \"../../models/models\";\r\nimport uprightPiano from \"./../../assets/images/uprightPiano.svg\";\r\nimport grandPiano from \"./../../assets/images/grandPiano.svg\";\r\nimport star from \"./../../assets/images/star.svg\";\r\n\r\ninterface PropTypes {\r\n  instruments: Array<InstrumentType>;\r\n  expanded?: boolean;\r\n}\r\n\r\nconst Instruments: React.FC<PropTypes> = ({\r\n  instruments,\r\n  expanded = false,\r\n}) => {\r\n  if (instruments !== null)\r\n    return (\r\n      <ul\r\n        className={[\r\n          styles.instrumentsList,\r\n          expanded ? styles.flexColumnAndRow : styles.flexRow,\r\n        ].join(\" \")}\r\n      >\r\n        {instruments.map((item) => (\r\n          <li key={item.id} className={styles.instrumentItem}>\r\n            <img\r\n              className={styles.instrumentIcon}\r\n              src={item.type === \"UpRightPiano\" ? uprightPiano : grandPiano}\r\n              alt={\r\n                item.type === \"UpRightPiano\" ? \"up-right piano\" : \"grand piano\"\r\n              }\r\n            />\r\n            {expanded && (\r\n              <>\r\n                <p>{item.name}</p>\r\n                <img className={styles.star} src={star} alt=\"star\" />\r\n              </>\r\n            )}\r\n            <p>{item.rate}</p>\r\n          </li>\r\n        ))}\r\n      </ul>\r\n    );\r\n  return null;\r\n};\r\n\r\nexport default Instruments;\r\n","import React from \"react\";\nimport styles from \"./occupantInfo.module.css\";\nimport {\n  OccupiedInfo,\n  User,\n  UserTypes,\n  UserTypesUa,\n} from \"../../../models/models\";\nimport Title from \"../../title/Title\";\nimport { fullName, getTimeHHMM, typeStyle } from \"../../../helpers/helpers\";\nimport { usePopupWindow } from \"../../popupWindow/PopupWindowProvider\";\nimport UserProfile from \"../../userProfile/UserProfile\";\n\ninterface PropTypes {\n  occupied: OccupiedInfo | null;\n}\n\nconst OccupantInfo: React.FC<PropTypes> = ({ occupied }) => {\n  const dispatchPopupWindow = usePopupWindow();\n\n  const onClick = () => {\n    dispatchPopupWindow({\n      header: <h1>{fullName(occupied?.user)}</h1>,\n      body: <UserProfile userId={occupied?.user.id as number} />,\n    });\n  };\n\n  return (\n    <>\n      <Title title=\"Ким зайнято\" />\n      <div onClick={onClick} className={styles.occupantCard}>\n        <div className={styles.occupantName}>\n          <div className={styles.icon} />\n          {occupied?.user.nameTemp === null ?\n            <p>{fullName(occupied?.user)}</p> :\n            <p>{occupied?.user.nameTemp}</p>}\n        </div>\n        <p\n          style={typeStyle(occupied as OccupiedInfo)}\n          className={styles.occupantType}\n        >\n          {UserTypesUa[occupied?.user.type as UserTypes]}\n        </p>\n        <p className={styles.occupiedUntil}>\n          Зайнято до {getTimeHHMM(new Date((occupied as OccupiedInfo)?.until))}\n        </p>\n      </div>\n    </>\n  );\n};\n\nexport default OccupantInfo;\n","import { gql } from \"@apollo/client\";\r\n\r\nexport const OCCUPY_CLASSROOM = gql`\r\n    mutation occupyClassroom($input: OccupyClassroomInput!) {\r\n        occupyClassroom(input: $input) {\r\n            classroom {\r\n                id\r\n                name\r\n                special\r\n                chair {\r\n                    name\r\n                }\r\n                occupied {\r\n                    user {\r\n                        id\r\n                        firstName\r\n                        patronymic\r\n                        lastName\r\n                        type\r\n                        department {\r\n                            name\r\n                        }\r\n                    }\r\n                }\r\n                instruments {\r\n                    type\r\n                    name\r\n                    rate\r\n                }\r\n            }\r\n            userErrors {\r\n                message\r\n                code\r\n            }\r\n        }\r\n    }\r\n`;","import React, {FormEvent, useEffect, useRef, useState,} from \"react\";\nimport styles from \"./occupantRegistration.module.css\";\nimport {useMutation, useQuery} from \"@apollo/client\";\nimport {GET_USERS} from \"../../../api/operations/queries/users\";\nimport {fullName} from \"../../../helpers/helpers\";\nimport Title from \"../../title/Title\";\nimport Select from 'react-select';\nimport {User, UserTypesUa, UserTypes} from \"../../../models/models\";\nimport {OCCUPY_CLASSROOM} from \"../../../api/operations/mutations/occupyClassroom\";\nimport {gridUpdate} from \"../../../api/client\";\n\ninterface PropTypes {\n  dispatchNotification: (value: any) => void;\n  classroomId: number;\n  classroomName: string;\n  dispatch: (value: any) => void;\n}\n\nconst OccupantRegistration: React.FC<PropTypes> = ({\n   dispatchNotification,\n   classroomId,\n   classroomName,\n   dispatch\n}) => {\n  const [value, setValue] = useState<string>();\n  const [existingUserValue, setExistingUserValue] = useState(null);\n  const [chosenUserId, setChosenUserId] = useState(-1);\n  const [chosenUserName, setChosenUserName] = useState('');\n  const {data, loading, error} = useQuery(GET_USERS);\n  const [occupyClassroom] = useMutation(OCCUPY_CLASSROOM);\n  const [users, setUsers] = useState();\n  const newUserTypes: any = [\n    {value: UserTypes.STUDENT, label: UserTypesUa.STUDENT},\n    {value: UserTypes.POST_GRADUATE, label: UserTypesUa.POST_GRADUATE},\n    {value: UserTypes.TEACHER, label: UserTypesUa.TEACHER},\n    {value: UserTypes.ILLUSTRATOR, label: UserTypesUa.ILLUSTRATOR},\n    {value: UserTypes.CONCERTMASTER, label: UserTypesUa.CONCERTMASTER},\n    {value: UserTypes.PIANO_TUNER, label: UserTypesUa.PIANO_TUNER},\n    {value: UserTypes.STAFF, label: UserTypesUa.STAFF},\n    {value: UserTypes.OTHER, label: UserTypesUa.OTHER},\n  ];\n  const [chosenUserType, setChosenUserType] = useState(newUserTypes[0]);\n  const existingUserInput = useRef(null);\n\n  //@ts-ignore\n  useEffect(() => existingUserInput.current.focus(),[]);\n\n  useEffect(() => {\n    if (!loading && !error) {\n      setUsers(data.users.map((user: User) => ({label: user.id + \": \" + fullName(user), value: user.id})));\n    }\n  }, [data]);\n\n  const handleReset = () => {\n    setExistingUserValue(null);\n  };\n\n  const handleExistingUser = (e: any) => {\n    const chosenUser = (data.users as unknown as Array<User>)?.find(user => user.id === e.value);\n\n    setChosenUserId(e.value);\n    setChosenUserName(fullName(chosenUser as User));\n    setChosenUserType({value: (chosenUser as User).type, label: UserTypesUa[(chosenUser?.type as UserTypes)]});\n    setValue('');\n    setExistingUserValue(e);\n  };\n\n  const handleNewUser = (e: any) => {\n    if (e.target.value.length === 1) {\n      setChosenUserType(newUserTypes[0]);\n    }\n\n    setChosenUserId(-1);\n    setValue(e.target.value);\n    setChosenUserName(e.target.value);\n    setExistingUserValue(null);\n  }\n\n  const handleTypeSelect = (e: any) => {\n    setChosenUserType(e);\n  };\n\n  const handleOccupy = (e: FormEvent<HTMLFormElement>) => {\n    const existingUser = {\n      userId: chosenUserId,\n    };\n    const newUser = {\n      userId: -1,\n      tempUser: {\n        name: chosenUserName,\n        type: chosenUserType.value\n      }\n    };\n    const occupant = chosenUserId === -1 ? newUser : existingUser;\n\n    e.preventDefault();\n\n    if(chosenUserName !== \"\") {\n      occupyClassroom({\n        variables: {\n          input: {\n            classroomName: classroomName.toString(),\n            until: new Date(),\n            ...occupant\n          }\n        }\n      }).then(() => {\n        dispatch({\n          type: \"POP_POPUP_WINDOW\",\n        });\n        gridUpdate(!gridUpdate());\n        dispatchNotification({\n          header: \"Успішно!\",\n          message: `Аудиторія ${classroomName} зайнята.`,\n          type: \"ok\",\n        });\n      });\n    } else {\n      dispatchNotification({\n        header: \"Помилка\",\n        message: `Виберіть користувача.`,\n        type: \"alert\",\n      });\n    }\n\n  };\n\n  return (\n    <div>\n      <form\n        id=\"userSearchForm\"\n        className={styles.userSearch}\n        onSubmit={handleOccupy}\n      >\n          <Select\n            placeholder=\"Існуючі користувачі\"\n            options={users}\n            value={existingUserValue}\n            styles={{menuPortal: base => ({...base, zIndex: 9999})}}\n            menuPortalTarget={document.body}\n            onChange={handleExistingUser}\n            onFocus={handleReset}\n            ref={existingUserInput}\n          />\n        <div>\n            <input\n              type=\"text\"\n              value={value}\n              onChange={handleNewUser}\n              name=\"tempUsersInput\"\n              id=\"tempUsersInput\"\n              placeholder=\"Новий користувач\"\n              className={styles.createUserInput}\n              autoComplete=\"off\"\n            />\n          {value && <Select\n            options={newUserTypes}\n            value={chosenUserType}\n            placeholder={UserTypesUa.STUDENT}\n            onChange={handleTypeSelect}\n            menuPortalTarget={document.body}\n            styles={{menuPortal: base => ({...base, zIndex: 9999})}}\n          />}\n        </div>\n      </form>\n      <Title title=\"Вибраний користувач\"/>\n      <p>П.І.Б.: {chosenUserName}</p>\n      {/*@ts-ignore*/}\n      <p>Статус: { chosenUserType && chosenUserName?.length !== 0 && UserTypesUa[chosenUserType.value]}</p>\n    </div>\n  );\n};\n\nexport default OccupantRegistration;","import React, {useEffect} from \"react\";\nimport styles from \"./classroomInfo.module.css\";\nimport { ClassroomType } from \"../../models/models\";\nimport Instruments from \"../instruments/Instruments\";\nimport ScheduleUnit from \"../scheduleUnit/ScheduleUnit\";\nimport Title from \"../title/Title\";\nimport OccupantInfo from \"./occupantInfo/OccupantInfo\";\nimport OccupantRegistration from \"./occupantRegistration/OccupantRegistration\";\n\ninterface PropTypes {\n  classroom: ClassroomType;\n  dispatchNotification: (value: string) => void;\n  dispatch: (value: any) => void;\n  isPassed: boolean;\n}\n\nconst ClassroomInfo: React.FC<PropTypes> = ({\n  classroom,\n  dispatchNotification,\n  dispatch,\n  isPassed\n}) => {\n  const { name, instruments, description, chair, occupied, id } = classroom;\n  const occupiedInfo = (\n    <>\n      <OccupantInfo occupied={occupied} />\n    </>\n  );\n\n  return (\n    <div>\n      <p className={styles.description}>\n        {chair ? chair.name + \". \" + description : description}\n      </p>\n      <Title title=\"Розклад на сьогодні\" />\n      <ScheduleUnit classroomName={name} />\n      {instruments.length > 0 && (\n        <>\n          <Title title=\"Інструменти\" />\n          <Instruments expanded instruments={instruments} />\n        </>\n      )}\n      {occupied && !isPassed ? (\n        occupiedInfo\n      ) : (\n        <>\n          <Title title=\"Запис в аудиторію\" />\n          <OccupantRegistration\n            dispatchNotification={dispatchNotification}\n            classroomId={id}\n            classroomName={name}\n            dispatch={dispatch}/>\n        </>\n      )}\n    </div>\n  );\n};\n\nexport default ClassroomInfo;\n","import React from \"react\";\r\nimport styles from \"./tooltip.module.css\";\r\n\r\ninterface PropTypes {\r\n  body: string;\r\n}\r\n\r\nconst Tooltip: React.FC<PropTypes> = ({ body }) => {\r\n  return <div className={styles.tooltip}>{body}</div>;\r\n};\r\n\r\nexport default Tooltip;\r\n","import React from \"react\";\r\nimport styles from \"./tag.module.css\";\r\nimport Tooltip from \"../tooltip/Tooltip\";\r\n\r\ninterface PropTypes {\r\n  body: string;\r\n}\r\n\r\nconst Tag: React.FC<PropTypes> = ({ body }) => {\r\n  const isMobileDevise = document.body.clientWidth < 1024;\r\n  const bodyBrief = body\r\n    .split(\" \")\r\n    .map((word) => word.charAt(0).toUpperCase())\r\n    .join(\"\");\r\n  const bodyFull = body.toUpperCase();\r\n  return (\r\n    <div className={styles.tagContainer}>\r\n      <Tooltip body={body}/>\r\n      <p className={styles.tag}>{isMobileDevise ? bodyBrief : bodyFull}</p>\r\n    </div>\r\n  );\r\n};\r\n\r\nexport default Tag;\r\n","import {gql} from \"@apollo/client\";\r\n\r\nexport const FREE_CLASSROOM = gql`\r\n    mutation free($input: FreeClassroomInput!) {\r\n        freeClassroom(input: $input) {\r\n            classroom {\r\n                id\r\n                name\r\n                occupied {\r\n                    user {\r\n                        id\r\n                        firstName\r\n                        lastName\r\n                        patronymic\r\n                        type\r\n                    }\r\n                    until\r\n                }\r\n            }\r\n                userErrors {\r\n                    message\r\n                    code\r\n                }\r\n            }\r\n        }\r\n`;\r\n","import React from \"react\";\nimport Button from \"../button/Button\";\nimport styles from \"../classroom/classroom.module.css\";\nimport { gridUpdate } from \"../../api/client\";\nimport { useMutation } from \"@apollo/client\";\nimport { FREE_CLASSROOM } from \"../../api/operations/mutations/freeClassroom\";\nimport { OccupiedInfo } from \"../../models/models\";\n\ninterface PropTypes {\n  classroomName: string;\n  occupied: OccupiedInfo | null;\n  dispatchNotification: (value: any) => void;\n  setIsPassed: (value: boolean) => void;\n  isPassed: boolean;\n}\n\nconst   Footer: React.FC<PropTypes> = ({\n  classroomName,\n  occupied,\n  dispatchNotification,\n  setIsPassed,\n  isPassed,\n  ...props\n}) => {\n  const [freeClassroom] = useMutation(FREE_CLASSROOM, {\n    variables: {\n      input: {\n        classroomName: String(classroomName),\n      },\n    },\n  });\n\n  const handleFreeClassroom = () => {\n\n    freeClassroom().then(() => {\n      dispatchNotification({\n        header: \"Успішно!\",\n        message: `Аудиторія ${classroomName} звільнена.`,\n        type: \"ok\",\n      });\n      // @ts-ignore\n      props.dispatch({\n        type: \"POP_POPUP_WINDOW\",\n      });\n      gridUpdate(!gridUpdate());\n    });\n  };\n\n  const handlePassClassroom = () => {\n    setIsPassed(true);\n    console.log(isPassed)\n  };\n\n  return (\n    <div className={styles.footer}>\n      {occupied || (occupied && isPassed) ? (\n        <>\n          <Button color=\"orange\" onClick={handlePassClassroom}>Передати аудиторію</Button>\n          <Button color=\"red\" onClick={handleFreeClassroom}>\n            Звільнити аудиторію\n          </Button>\n        </>\n      ) : (\n        <Button type=\"submit\" form=\"userSearchForm\">\n          Записати в аудиторію\n        </Button>\n      )}\n    </div>\n  );\n};\n\nexport default Footer;\n","export default __webpack_public_path__ + \"static/media/specialPiano.003d6bf5.svg\";","import React, {useEffect, useState} from \"react\";\nimport styles from \"./classroom.module.css\";\nimport {\n  ClassroomType,\n  OccupiedInfo,\n  UserTypes,\n  UserTypesUa,\n} from \"../../models/models\";\nimport {fullName, typeStyle} from \"../../helpers/helpers\";\nimport Instruments from \"../instruments/Instruments\";\nimport {usePopupWindow} from \"../popupWindow/PopupWindowProvider\";\nimport ClassroomInfo from \"../ classroomInfo/ClassroomInfo\";\nimport Tag from \"../tag/Tag\";\nimport Footer from \"../footer/Footer\";\nimport specialPiano from \"../../assets/images/specialPiano.svg\";\n\ninterface PropTypes {\n  classroom: ClassroomType;\n  dispatchNotification: (value: any) => void;\n}\n\nconst Classroom: React.FC<PropTypes> = ({\n                                          classroom,\n                                          dispatchNotification,\n                                        }) => {\n  const {id, name, occupied, instruments, isWing, isOperaStudio, special} = classroom;\n  const occupiedStyle = {\n    background: \"#fff\",\n    transition: \"all .3s cubic-bezier(0.25, 0.8, 0.25, 1)\"\n  };\n  const vacantStyle = {\n    background: \"#4bfd63\",\n    transition: \"all .3s cubic-bezier(0.25, 0.8, 0.25, 1)\"\n  };\n  const occupationInfo = occupied ? \"Зайнято\" : \"Вільно\";\n  const header = (\n    <>\n      <h1>{`Аудиторія ${name}`}</h1>\n      {isWing && <Tag body=\"Флігель\"/>}\n      {isOperaStudio && <Tag body=\"Оперна студія\"/>}\n    </>\n  );\n  const [isPassed, setIsPassed] = useState(false);\n  const dispatchPopupWindow = usePopupWindow();\n\n  const handlePassed = (value: boolean) => {\n    setIsPassed(value);\n  }\n\n  const handleClick = () => {\n    dispatchPopupWindow({\n      header: header,\n      //@ts-ignore\n      body: <ClassroomInfo\n        classroom={classroom}\n        dispatchNotification={dispatchNotification}\n        isPassed={isPassed}\n      />,\n      footer: <Footer\n        classroomName={name}\n        occupied={occupied}\n        dispatchNotification={dispatchNotification}\n        setIsPassed={handlePassed}\n        isPassed={isPassed}\n      />,\n    });\n  };\n\n  return (\n    <>\n      <li\n        key={id}\n        className={styles.classroomsListItem}\n        style={occupied ? occupiedStyle : vacantStyle}\n        onClick={handleClick}\n      >\n        <div className={styles.header}>\n          {special === 'PIANO' && <img className={styles.special} src={specialPiano} alt=\"Special Piano\"/>}\n          <h1>{name}</h1>\n          <div className={styles.occupantInfo}>\n            <p className={styles.occupantName}>\n              {occupied?.user.nameTemp === null ? fullName(occupied?.user, true) :\n                occupied?.user.nameTemp}\n            </p>\n            <p\n              style={typeStyle(occupied as OccupiedInfo)}\n              className={styles.occupantType}\n            >\n              {UserTypesUa[occupied?.user.type as UserTypes]}\n            </p>\n          </div>\n        </div>\n        <div className={styles.occupationInfo}>\n          <p>{occupationInfo}</p>\n        </div>\n        <Instruments instruments={instruments}/>\n      </li>\n    </>\n  );\n};\n\nexport default Classroom;\n","import React from \"react\";\r\nimport styles from \"./caviar.module.css\";\r\nimport { ClassroomType } from \"../../models/models\";\r\nimport { usePopupWindow } from \"../popupWindow/PopupWindowProvider\";\r\nimport ClassroomInfo from \"../ classroomInfo/ClassroomInfo\";\r\nimport Tag from \"../tag/Tag\";\r\nimport Button from \"../button/Button\";\r\n\r\ninterface PropTypes {\r\n  classrooms: Array<ClassroomType>;\r\n  dispatchNotification: (value: string) => void;\r\n}\r\n\r\nconst Caviar: React.FC<PropTypes> = ({ classrooms, dispatchNotification }) => {\r\n  const dispatchPopupWindow = usePopupWindow();\r\n  const occupiedStyle = {\r\n    background: \"#fff\",\r\n  };\r\n  const vacantStyle = {\r\n    background: \"#4bfd63\",\r\n  };\r\n\r\n\r\n  const handleFreeClassroom = () => {\r\n    // freeClassroom().then(() => gridUpdate(!gridUpdate()));\r\n  };\r\n\r\n  function handleClick(classroom: ClassroomType) {\r\n    dispatchPopupWindow({\r\n      header: (\r\n        <>\r\n          <h1>{`Аудиторія ${classroom.name}`}</h1>\r\n          {classroom.isWing && <Tag body=\"Флігель\" />}\r\n          {classroom.isOperaStudio && <Tag body=\"Оперна студія\" />}\r\n        </>\r\n      ),\r\n      body: (\r\n        //@ts-ignore\r\n        <ClassroomInfo\r\n          dispatchNotification={dispatchNotification}\r\n          classroom={classroom}\r\n        />\r\n      ),\r\n      footer: (\r\n        <div className={styles.footer}>\r\n          {classroom.occupied ? (\r\n            <>\r\n              <Button color=\"orange\">Передати аудиторію</Button>\r\n              <Button color=\"red\" onClick={handleFreeClassroom}>\r\n                Звільнити аудиторію\r\n              </Button>\r\n            </>\r\n          ) : (\r\n            <Button type=\"submit\" form=\"userSearchForm\">\r\n              Записати в аудиторію\r\n            </Button>\r\n          )}\r\n        </div>\r\n      ),\r\n    });\r\n  }\r\n\r\n  return (\r\n    <ul className={styles.caviar}>\r\n      {classrooms.map((classroom) => (\r\n        <li\r\n          onClick={() => handleClick(classroom)}\r\n          style={classroom.occupied ? occupiedStyle : vacantStyle}\r\n        >\r\n          {classroom.name}\r\n        </li>\r\n      ))}\r\n    </ul>\r\n  );\r\n};\r\n\r\nexport default Caviar;\r\n","import React from 'react';\nimport styles from './headerCheckbox.module.css';\n\nconst HeaderCheckbox = ({label, checked, setChecked}: any) => {\n\n  return <div className={styles.wrapper}>\n    <label className={styles.container}>{label}\n      <input type=\"checkbox\" value={checked} onChange={setChecked}/>\n      <span className={styles.checkmark}></span>\n    </label>\n  </div>\n}\n\nexport default HeaderCheckbox;","import React, {useEffect, useState} from \"react\";\nimport Header from \"../../components/header/Header\";\nimport {ClassroomsFilterTypes} from \"../../models/models\";\nimport Classroom from \"../../components/classroom/Classroom\";\nimport styles from \"./classrooms.module.css\";\nimport Caviar from \"../../components/caviar/Caviar\";\nimport {useNotification} from \"../../components/notification/NotificationProvider\";\nimport Edit from \"../../components/icons/edit/Edit\";\nimport HeaderSelect from \"../../components/headerSelect/HeaderSelect\";\nimport useClassrooms from \"../../hooks/useClassrooms\";\nimport {filterClassrooms} from \"../../helpers/filterClassrooms\";\nimport HeaderCheckbox from \"../../components/headerCheckBox/HeaderCheckbox\";\n\nconst filters = [\n  {value: ClassroomsFilterTypes.ALL, label: 'Всі'},\n  {value: ClassroomsFilterTypes.FREE, label: 'Вільні'},\n  {value: ClassroomsFilterTypes.SPECIAL, label: 'Спеціалізовані'},\n];\n\nconst Classrooms = () => {\n  const classrooms = useClassrooms();\n  const [filteredClassrooms, setFilteredClassrooms] = useState(classrooms);\n  const [filter, setFilter] = useState(filters[0].value);\n  const [isNoWing, setIsNoWing] = useState(false);\n  const [isOperaStudioOnly, setIsOperaStudioOnly] = useState(false);\n  const dispatchNotification = useNotification();\n\n  useEffect(() => {\n    setFilteredClassrooms(filterClassrooms(classrooms, filter, isOperaStudioOnly, isNoWing));\n  }, [classrooms, filter, isNoWing, isOperaStudioOnly]);\n\n  const handleFilterChange = (event: any) => {\n    setFilter(event.value);\n  };\n\n  const handleToggleWing = () => {\n    setIsNoWing(prevState => !prevState);\n  };\n\n  const handleToggleOperaStudio = () => {\n    setIsOperaStudioOnly(prevState => !prevState);\n  };\n\n  return (\n    <div className={styles.classroomsPage}>\n      <Header>\n        <h1>Аудиторії</h1>\n        <HeaderSelect options={filters} onChange={handleFilterChange}/>\n        <HeaderCheckbox label='Без флігеля' checked={isNoWing} setChecked={handleToggleWing}/>\n        <HeaderCheckbox label='Тільки оперна студія' checked={isOperaStudioOnly}\n                        setChecked={handleToggleOperaStudio}\n        />\n        <Edit path='/adminClassrooms'/>\n      </Header>\n      {classrooms && <><Caviar dispatchNotification={dispatchNotification} classrooms={filteredClassrooms}/>\n          <ul className={styles.classroomsList}>\n            {filteredClassrooms.map((classroom) => (\n              <Classroom\n                dispatchNotification={dispatchNotification}\n                key={classroom.id}\n                classroom={classroom}\n              />\n            ))}\n          </ul>\n      </>}\n    </div>\n  );\n};\n\nexport default Classrooms;","import {ClassroomsFilterTypes, ClassroomType} from \"../models/models\";\n\nexport const filterClassrooms = (\n  classrooms: Array<ClassroomType>,\n  type: ClassroomsFilterTypes = ClassroomsFilterTypes.ALL,\n  isOperaStudioOnly: boolean = false,\n  noWing: boolean = false\n  ): Array<ClassroomType> => {\n\n  const filterTypeOnly = (classroom: ClassroomType) => {\n    switch (type) {\n      case ClassroomsFilterTypes.ALL:\n        return true;\n      case ClassroomsFilterTypes.FREE:\n        return !classroom.occupied;\n      case ClassroomsFilterTypes.SPECIAL:\n        return !!classroom.special;\n    }\n  };\n\n  const wingOnlyFilter = (classroom: ClassroomType) => {\n    if (noWing) return !classroom.isWing;\n    return true;\n  };\n\n  const studioOnlyFilter = (classroom: ClassroomType) => {\n    if (isOperaStudioOnly) return classroom.isOperaStudio;\n    return true;\n  };\n\n  return classrooms?.filter(classroom => filterTypeOnly(classroom))\n    .filter(classroom => wingOnlyFilter(classroom))\n    .filter(classroom => studioOnlyFilter(classroom));\n};","import {gql} from \"@apollo/client\";\n\nexport const CREATE_INSTRUMENT = gql`\n    mutation createOneInstrument($data: InstrumentCreateInput!) {\n        createOneInstrument(data: $data) {\n            id\n            name\n            rate\n            type\n            persNumber\n            classroom {\n              name\n            }\n        }\n    }\n`;","import {gql} from \"@apollo/client\";\n\nexport const UPDATE_INSTRUMENT = gql`\n    mutation updateOneInstrument($data: InstrumentUpdateInput!, $where: InstrumentWhereUniqueInput!) {\n        updateOneInstrument(data: $data, where: $where) {\n            id\n            name\n            rate\n            type\n            persNumber\n            classroom {\n              name\n            }\n        }\n    }\n`;","import React, {useEffect, useState} from 'react';\nimport {useMutation} from \"@apollo/client\";\nimport {CREATE_INSTRUMENT} from \"../../../../api/operations/mutations/createInstrument\";\nimport {UPDATE_INSTRUMENT} from \"../../../../api/operations/mutations/updateInstrument\";\nimport {useForm} from \"react-hook-form\";\nimport styles from './createInstrumentPopupBody.module.css';\nimport mainStyles from '../../../../styles/main.module.css';\nimport useClassrooms from \"../../../../hooks/useClassrooms\";\nimport {FormData} from '../models';\nimport {SelectData} from '../models';\nimport Select from \"react-select\";\nimport {selectLightStyles} from \"../../../../styles/selectStyles\";\nimport {InstrumentType} from \"../../../../models/models\";\n\ninterface PropTypes {\n  dispatchNotification: (value: any) => void;\n  dispatch?: (value: any) => void;\n  handleErrorDetails?: (error: any) => void;\n  onUpdate: () => void;\n  addInstrument: (item: InstrumentType) => void;\n  instrument: InstrumentType | null;\n  isEditMode: boolean;\n}\n\nconst CreateInstrumentPopupBody: React.FC<PropTypes> = ({dispatchNotification, isEditMode,\n  dispatch, addInstrument, instrument, onUpdate,\n  handleErrorDetails}) => {\n  const {register, handleSubmit, watch, formState: {errors}} = useForm<FormData>();\n  const classrooms = useClassrooms();\n  const [classroomsData, setClassroomsData] = useState<SelectData[]>([{\n    value: instrument?.classroom ? String(instrument?.classroom?.id) : '',\n    label: instrument?.classroom ? String(instrument?.classroom?.name) : ''\n  }]);\n  const [createInstrument] = useMutation(CREATE_INSTRUMENT);\n  const [updateInstrument] = useMutation(UPDATE_INSTRUMENT);\n  const [classroomValue, setClassroomValue] = useState(classroomsData[0]);\n\n  useEffect(() => {\n    const data = classrooms.map(item => ({value: item.id, label: item.name}));\n    const emptyItem = ({value: '', label: 'Немає'});\n    setClassroomsData([emptyItem, ...data as unknown as SelectData[]]);\n  }, [classrooms]);\n\n  useEffect(() => {\n    if (isEditMode) {\n      const item = classroomsData.find(item => Number(item.value) === instrument?.classroom?.id);\n      if (item) setClassroomValue(item as SelectData);\n    } else {\n      setClassroomValue(classroomsData[0]);\n    }\n  }, [classroomsData, instrument]);\n\n  const handleSelect = (e: any) => {\n    setClassroomValue(e);\n  };\n\n  const onSubmit = async (data: FormData) => {\n    const {name, type, persNumber, rate} = data;\n    const classroomId = classroomValue?.value;\n    const classroomName = classroomValue ? classroomValue.label : instrument?.classroom.name;\n\n    try {\n      if (isEditMode) {\n        await updateInstrument({\n          variables: {\n            data: {\n              name: {set: name},\n              type: {set: type},\n              persNumber: {set: persNumber},\n              rate: {set: Number(rate)},\n              classroom: classroomId ? {connect: {id: classroomId}} : undefined\n            },\n            where: {\n              id: Number(instrument?.id)\n            }\n          }\n        });\n        onUpdate();\n        dispatchNotification({\n          header: \"Успішно!\",\n          message: `Дані змінені.`,\n          type: \"ok\",\n        });\n      } else {\n        const result = await createInstrument({\n          variables: {\n            data: {\n              name, type, persNumber, rate: Number(rate),\n              classroom: classroomId ? {connect: {id: classroomId}} : undefined\n            }\n          }\n        });\n        onUpdate();\n        dispatchNotification({\n          header: \"Успішно!\",\n          message: `Інструмент ${name}  створений.`,\n          type: \"ok\",\n        });\n        addInstrument({...result.data.createOneInstrument,\n          classroom: {name: classroomId ? classroomName : ''}});\n      }\n\n      dispatch && dispatch({\n        type: \"POP_POPUP_WINDOW\",\n      });\n    } catch (e) {\n      console.log(e)\n      dispatchNotification({\n        header: \"Помилка!\",\n        message:  <><span>Щось пішло не так.</span><br/>\n          <span style={{color: '#2b5dff', cursor: 'pointer', textDecoration: 'underline' }}\n                onClick={() => handleErrorDetails && handleErrorDetails(e)}>Деталі</span></>,\n        type: \"alert\",\n      });\n    }\n  };\n\n  return (\n    <div>\n      <form onSubmit={handleSubmit(onSubmit)} className={styles.container} id='createInstrument'>\n        {errors.name && <span className={mainStyles.required}>Обов'язкове поле</span>}\n        <label>\n          Назва\n          <input className={mainStyles.input} type='text' placeholder='Наприклад: \"Україна\"'\n                 defaultValue={isEditMode ? instrument?.name : undefined}\n                 {...register(\"name\", {required: true})}/>\n        </label>\n        {errors.type && <span className={mainStyles.required}>Обов'язкове поле</span>}\n        <label>\n          Тип\n          <input className={mainStyles.input} type='text' placeholder='Наприклад: \"Фортепіано\"'\n                 defaultValue={isEditMode ? instrument?.type : undefined}\n                 {...register(\"type\", {required: true})}/>\n        </label>\n        {errors.persNumber && <span className={mainStyles.required}>Обов'язкове поле</span>}\n        <label>\n          Інв. номер\n          <input className={mainStyles.input}\n                 type='number' placeholder='Наприклад: \"3242234\"'\n                 defaultValue={isEditMode ? instrument?.persNumber: undefined}\n                 {...register(\"persNumber\", {required: true})}/>\n        </label>\n        <label>\n          Рейтинг\n          <input className={mainStyles.input}\n                 defaultValue={isEditMode && instrument ? instrument.rate : 1}\n                 type='number' min='1' max='10' placeholder='Рейтинг' {...register(\"rate\")}/>\n        </label>\n        <label>\n          Аудиторія\n          <Select options={classroomsData} styles={selectLightStyles} menuPortalTarget={document.body}\n                  placeholder='Аудиторія' value={classroomValue} onChange={handleSelect}/>\n        </label>\n      </form>\n    </div>\n  );\n};\n\nexport default CreateInstrumentPopupBody;\n","import {gql} from \"@apollo/client\";\n\nexport const DELETE_INSTRUMENT = gql`\n    mutation deleteOneInstrument($where: InstrumentWhereUniqueInput!) {\n        deleteOneInstrument(where: $where) {\n            name\n        }\n    }\n`;","import React from 'react';\nimport styles from './browseInstrumentPopupBody.module.css';\nimport {InstrumentType} from \"../../../../models/models\";\n\ninterface PropTypes {\n  instrument: InstrumentType;\n}\n\nconst BrowseInstrumentPopupBody: React.FC<PropTypes> = ({instrument}) => {\n  const {id, name, persNumber, type, rate, classroom: {name: classroomName}} = instrument;\n\n  return (\n    <div className={styles.list}>\n      <div><span>ID: </span><span>{id}</span></div>\n      <div><span>Назва: </span><span>{name}</span></div>\n      <div><span>Інв. номер: </span><span>{persNumber}</span></div>\n      <div><span>Тип: </span><span>{type}</span></div>\n      <div><span>Рейтинг: </span><span>{rate}</span></div>\n      {classroomName && <div><span>Аудиторія: </span><span>{classroomName}</span></div>}\n    </div>\n  );\n}\n\nexport default BrowseInstrumentPopupBody;","import React, {useEffect, useState} from 'react';\nimport useInstruments from \"../../../hooks/useInstruments\";\nimport Header from \"../../../components/header/Header\";\nimport DataList from \"../../../components/dataList/DataList\";\nimport styles from './adminInstruments.module.css';\nimport Edit from \"../../../components/icons/edit/Edit\";\nimport Delete from \"../../../components/icons/delete/Delete\";\nimport Add from \"../../../components/icons/add/Add\";\nimport {usePopupWindow} from \"../../../components/popupWindow/PopupWindowProvider\";\nimport {useNotification} from \"../../../components/notification/NotificationProvider\";\nimport CreateInstrumentPopupBody from \"./createInstrumentPopupBody/CreateInstrumentPopupBody\";\nimport Button from \"../../../components/button/Button\";\nimport {useMutation} from \"@apollo/client\";\nimport {DELETE_INSTRUMENT} from \"../../../api/operations/mutations/deleteInstrument\";\nimport {ClassroomType, InstrumentType} from \"../../../models/models\";\nimport BrowseClassroomPopupBody from \"../classrooms/browseClassroomPopupBody/BrowseClassroomPopupBody\";\nimport BrowseInstrumentPopupBody from \"./browseInstrumentPopupBody/BrowseInstrumentPopupBody\";\n\nconst dataHeader = ['ID', 'Назва', 'Рейтинг', 'Ауд.', 'Інв. номер'];\n\nconst AdminInstruments = () => {\n  const [updateList, setUpdateList] = useState(false);\n  const instruments = useInstruments(updateList);\n  const [listData, setListData] = useState<Array<any>>([]);\n  const dispatchPopupWindow = usePopupWindow();\n  const dispatchNotification = useNotification();\n  const [deleteInstrument] = useMutation(DELETE_INSTRUMENT);\n  const instrument = (item: InstrumentType) => <>\n    <span className={styles.alignText}>{item.id}</span>\n    <span>{item.name}</span>\n    <span className={styles.alignText}>{item.rate}</span>\n    <span className={styles.alignText}>{item.classroom?.name}</span>\n    <span className={styles.alignText}>{item.persNumber}</span>\n    <Edit dark onClick={() => handleAdd(item, true)}/>\n    <Delete onClick={() => handleDelete(item.id)}/>\n  </>;\n\n  useEffect(() => {\n    setListData(instruments?.map((item) => instrument(item)));\n  }, [instruments]);\n\n  const handleErrorDetails = (e: any) => {\n    dispatchPopupWindow({\n      header: <h1>{e.name}</h1>,\n      body: <>\n        <p>{e.message}</p>\n      </>,\n      footer: ''\n    })\n  };\n\n  const handleDelete = async (id: number) => {\n    const confirm = window.confirm('Ви дійсно бажаєте видалити інструмент?');\n\n    if (confirm) {\n      try {\n        await deleteInstrument({variables: {where: {id}}});\n        dispatchNotification({\n          header: \"Успішно!\",\n          message: `Інструмент видалено.`,\n          type: \"ok\",\n        });\n        setUpdateList(prevState => !prevState);\n      } catch (e) {\n        console.log(e)\n        dispatchNotification({\n          header: \"Помилка!\",\n          message: `Щось пішло не так.`,\n          type: \"alert\",\n        });\n      }\n    }\n  };\n\n  const handleUpdate = () => {\n    setUpdateList(prevState => !prevState);\n  };\n\n  const handleAdd = (item: InstrumentType | null = null, isEditMode = false) => {\n    dispatchPopupWindow({\n      header: <h1>{isEditMode ? 'Редагувати інструмент' : 'Створити інструмент'}</h1>,\n      body: <CreateInstrumentPopupBody dispatchNotification={dispatchNotification} onUpdate={handleUpdate}\n          addInstrument={addInstrument} instrument={item} isEditMode={isEditMode}\n          handleErrorDetails={handleErrorDetails}\n      />,\n      footer: <Button type='submit' form='createInstrument'>\n        {isEditMode ? 'Зберегти зміни' : 'Створити'}\n      </Button>,\n    });\n  };\n\n  const handleItemClick = (id: number) => {\n    const instrument = instruments?.find(item => item.id === id);\n    dispatchPopupWindow({\n      header: <h1>{instrument?.name}</h1>,\n      body: <BrowseInstrumentPopupBody instrument={instrument as InstrumentType}/>,\n      footer: ''\n    });\n  };\n\n  const addInstrument = (item: InstrumentType) => {\n    setListData(prevState => [...prevState, instrument(item)]);\n  };\n\n  return (\n    <div>\n      <Header>\n        <h1>Управління інструментами</h1>\n        <Add onClick={handleAdd}/>\n      </Header>\n      <DataList header={dataHeader} data={listData}\n                gridTemplateColumns={'40px 250px 100px 100px 1fr 30px 30px'}\n                handleItemClick={handleItemClick}\n      />\n    </div>\n  );\n}\n\nexport default AdminInstruments;","import { gql } from \"@apollo/client\";\r\n\r\nexport const GET_FACULTIES = gql`\r\n    query getFaculties($where: FacultyWhereInput!) {\r\n        faculties(where: $where) {\r\n            id\r\n            name\r\n        }\r\n    }\r\n`;","import {useEffect, useState} from \"react\";\nimport {client} from \"../api/client\";\nimport {Faculty} from \"../models/models\";\nimport {GET_FACULTIES} from \"../api/operations/queries/faculties\";\n\nconst useFaculties = (updateList: boolean = false): Array<Faculty> => {\n  const [faculties, setFaculties] = useState<Faculty[]>([]);\n\n  useEffect(() => {\n    client.query({query: GET_FACULTIES, variables: {\n      where: {\n      }\n      },\n      fetchPolicy: 'network-only'\n    }).then((data) => {\n      setFaculties(data.data.faculties\n          .slice().sort((a: Faculty, b: Faculty) => a.id - b.id));\n      });\n  }, [updateList]);\n\n  return faculties;\n};\n\nexport default useFaculties;","import {gql} from \"@apollo/client\";\n\nexport const CREATE_DEPARTMENT = gql`\n    mutation createOneDepartment($data: DepartmentCreateInput!) {\n        createOneDepartment(data: $data) {\n            id\n            name\n        }\n    }\n`;","import {gql} from \"@apollo/client\";\n\nexport const UPDATE_DEPARTMENT = gql`\n    mutation updateOneDepartment($data: DepartmentUpdateInput!, $where: DepartmentWhereUniqueInput!) {\n        updateOneDepartment(data: $data, where: $where) {\n            id\n            name\n        }\n    }\n`;","import React, {useEffect, useState} from 'react';\nimport Select from \"react-select\";\nimport useFaculties from \"../../../../hooks/useFaculties\";\nimport {selectLightStyles} from \"../../../../styles/selectStyles\";\nimport mainStyles from '../../../../styles/main.module.css';\nimport {useMutation} from \"@apollo/client\";\nimport {CREATE_DEPARTMENT} from \"../../../../api/operations/mutations/createDepartment\";\nimport {useForm} from \"react-hook-form\";\nimport {FormData} from \"../../instruments/models\";\nimport {UPDATE_DEPARTMENT} from \"../../../../api/operations/mutations/updateDepartment\";\nimport {Department, Faculty} from \"../../../../models/models\";\n\ninterface PropTypes {\n  setUpdateList: (value: any) => void;\n  dispatchNotification: (value: any) => void;\n  dispatch?: (value: any) => void;\n  item: Department | null\n}\n\nconst CreateDepartmentPopupBody: React.FC<PropTypes> = ({setUpdateList, dispatchNotification, dispatch,\n        item}) => {\n  const faculties = useFaculties();\n  const [createDepartment] = useMutation(CREATE_DEPARTMENT);\n  const [updateDepartment] = useMutation(UPDATE_DEPARTMENT);\n  const [selectValue, setSelectValue] = useState({value: -1, label: ''});\n  const [options, setOptions] = useState<any>(selectValue);\n  const {register, handleSubmit, watch, formState: {errors}} = useForm<FormData>();\n\n  useEffect(() => {\n    const data = faculties.map(item => ({value: item.id, label: item.name}));\n    if (item) {\n      const faculty: Faculty | undefined = faculties.find(f => f.id === item?.faculty.id);\n\n      setSelectValue({value: faculty?.id as number, label: faculty?.name as string});\n    } else {\n      setSelectValue(data[0]);\n    }\n    setOptions(data);\n  }, [faculties]);\n\n  const onSubmit = async (e: any) => {\n    if (item) {\n      try {\n        await updateDepartment({\n          variables: {\n            data: {\n              name: {set: e.name},\n              faculty: item ? {connect: {id: selectValue.value}} : undefined\n            },\n            where: {\n              id: Number(item?.id)\n            }\n          }\n        });\n        dispatchNotification({\n          header: \"Успішно!\",\n          message: `Дані збережено.`,\n          type: \"ok\",\n        });\n        setUpdateList((prevState: any) => !prevState);\n        dispatch && dispatch({\n          type: \"POP_POPUP_WINDOW\",\n        });\n      } catch (e) {\n        console.log(e)\n        dispatchNotification({\n          header: \"Помилка!\",\n          message: `Щось пішло не так.`,\n          type: \"alert\",\n        });\n      }\n    } else {\n      try {\n        await createDepartment({\n          variables: {\n            data: {\n              name: e.name,\n              faculty: {\n                connect: {id: selectValue.value}\n              }\n            }\n          }\n        });\n        dispatchNotification({\n          header: \"Успішно!\",\n          message: `Кафедру створено.`,\n          type: \"ok\",\n        });\n        setUpdateList((prevState: any) => !prevState);\n        dispatch && dispatch({\n          type: \"POP_POPUP_WINDOW\",\n        });\n      } catch (e) {\n        console.log(e)\n        dispatchNotification({\n          header: \"Помилка!\",\n          message: `Щось пішло не так.`,\n          type: \"alert\",\n        });\n      }\n    }\n  };\n\n  const handleSelect = (e: any) => {\n    setSelectValue(e);\n  };\n\n  return (\n    <form id='createDepartment' onSubmit={handleSubmit(onSubmit)}>\n      {errors.name && <span className={mainStyles.required}>Обов'язкове поле</span>}\n      <label>\n        Назва\n        <input className={mainStyles.input} type=\"text\"\n               defaultValue={item ? item?.name : undefined}\n               {...register(\"name\", {required: true})}/>\n      </label>\n      <label>\n        Факультет\n        {/*@ts-ignore*/}\n        <Select options={options} styles={selectLightStyles} menuPortalTarget={document.body}\n                placeholder='Виберіть факультет' defaultValue={selectValue} value={selectValue}\n                onChange={handleSelect}\n        />\n      </label>\n    </form>\n  );\n}\n\nexport default CreateDepartmentPopupBody;","import {gql} from \"@apollo/client\";\n\nexport const DELETE_DEPARTMENT = gql`\n    mutation deleteOneDepartment($where: DepartmentWhereUniqueInput!) {\n        deleteOneDepartment(where: $where) {\n            name\n        }\n    }\n`;","import React, {useEffect, useState} from 'react';\nimport Header from \"../../../components/header/Header\";\nimport Add from \"../../../components/icons/add/Add\";\nimport {usePopupWindow} from \"../../../components/popupWindow/PopupWindowProvider\";\nimport CreateDepartmentPopupBody from \"./createDepartmentPopupBody/CreateDepartmentPopupBody\";\nimport Button from \"../../../components/button/Button\";\nimport DataList from \"../../../components/dataList/DataList\";\nimport useDepartments from \"../../../hooks/useDepartments\";\nimport {Department} from \"../../../models/models\";\nimport Edit from \"../../../components/icons/edit/Edit\";\nimport Delete from \"../../../components/icons/delete/Delete\";\nimport styles from './adminDepartments.module.css';\nimport {useMutation} from \"@apollo/client\";\nimport {DELETE_DEPARTMENT} from \"../../../api/operations/mutations/deleteDepartment\";\nimport {useNotification} from \"../../../components/notification/NotificationProvider\";\n\nconst listHeader = ['ID', 'Назва'];\n\nconst AdminDepartments = () => {\n  const dispatchPopupWindow = usePopupWindow();\n  const [updateList, setUpdateList] = useState(false);\n  const departments = useDepartments(updateList);\n  const [deleteDepartment] = useMutation(DELETE_DEPARTMENT);\n  const dispatchNotification = useNotification();\n  const [listData, setListData] = useState<any>([]);\n  const dataItem = (item: Department) => <>\n    <span className={styles.centerText}>{item.id}</span>\n    <span>{item.name}</span>\n    <Edit dark onClick={() => handleAdd(item)}/>\n    <Delete onClick={() => handleDelete(item.id)}/>\n  </>;\n\n  useEffect(() => {\n    const data = departments.map(item => dataItem(item));\n    setListData(data);\n  }, [departments]);\n\n  const handleAdd = (item: Department | null = null) => {\n    dispatchPopupWindow({\n      header: <h1>{item ? 'Редагування кафедри' : 'Створити кафедру'}</h1>,\n      body: <CreateDepartmentPopupBody setUpdateList={setUpdateList}\n              dispatchNotification={dispatchNotification} item={item}/>,\n      footer: <Button type='submit' form='createDepartment'>\n        {item ? 'Зберегти зміни' : 'Створити'}\n      </Button>\n    });\n  };\n\n  const handleDelete = async (id: number) => {\n    const confirm = window.confirm('Ви дійсно бажаєте видалити кафедру?');\n\n    if (confirm) {\n      try {\n        await deleteDepartment({variables: {where: {id}}});\n        setUpdateList(prevState => !prevState);\n        dispatchNotification({\n          header: \"Успішно!\",\n          message: `Кафедру видалено.`,\n          type: \"ok\",\n        });\n      } catch (e) {\n        console.log(e)\n        dispatchNotification({\n          header: \"Помилка!\",\n          message: `Щось пішло не так.`,\n          type: \"alert\",\n        });\n      }\n    }\n  };\n\n  return (\n    <div>\n      <Header>\n        <h1>Управління кафедрами</h1>\n        <Add onClick={() => handleAdd()}/>\n      </Header>\n      <DataList header={listHeader} data={listData} gridTemplateColumns={'40px 1fr 40px 40px'}/>\n    </div>\n  );\n}\n\nexport default AdminDepartments;","import {gql} from \"@apollo/client\";\n\nexport const CREATE_FACULTY = gql`\n    mutation createOneFaculty($data: FacultyCreateInput!) {\n        createOneFaculty(data: $data) {\n            id\n            name\n        }\n    }\n`;","import {gql} from \"@apollo/client\";\n\nexport const UPDATE_FACULTY = gql`\n    mutation updateOneFaculty($data: FacultyUpdateInput!, $where: FacultyWhereUniqueInput!) {\n        updateOneFaculty(data: $data, where: $where) {\n            id\n            name\n        }\n    }\n`;","import React from 'react';\nimport mainStyles from '../../../../styles/main.module.css';\nimport {useMutation} from \"@apollo/client\";\nimport {useForm} from \"react-hook-form\";\nimport {FormData} from \"../../instruments/models\";\nimport {Faculty} from \"../../../../models/models\";\nimport {CREATE_FACULTY} from \"../../../../api/operations/mutations/createFaculty\";\nimport {UPDATE_FACULTY} from \"../../../../api/operations/mutations/updateFaculty\";\n\ninterface PropTypes {\n  setUpdateList: (value: any) => void;\n  dispatchNotification: (value: any) => void;\n  dispatch?: (value: any) => void;\n  item: Faculty | null\n}\n\nconst CreateFacultyPopupBody: React.FC<PropTypes> = ({setUpdateList, dispatchNotification, dispatch,\n                                                          item}) => {\n  const [createFaculty] = useMutation(CREATE_FACULTY);\n  const [updateFaculty] = useMutation(UPDATE_FACULTY);\n  const {register, handleSubmit, watch, formState: {errors}} = useForm<FormData>();\n\n  const onSubmit = async (e: any) => {\n    if (item) {\n      try {\n        await updateFaculty({\n          variables: {\n            data: {\n              name: {set: e.name},\n            },\n            where: {\n              id: Number(item?.id)\n            }\n          }\n        });\n        dispatchNotification({\n          header: \"Успішно!\",\n          message: `Дані збережено.`,\n          type: \"ok\",\n        });\n        setUpdateList((prevState: any) => !prevState);\n        dispatch && dispatch({\n          type: \"POP_POPUP_WINDOW\",\n        });\n      } catch (e) {\n        console.log(e)\n        dispatchNotification({\n          header: \"Помилка!\",\n          message: `Щось пішло не так.`,\n          type: \"alert\",\n        });\n      }\n    } else {\n      try {\n        await createFaculty({\n          variables: {\n            data: {\n              name: e.name,\n            }\n          }\n        });\n        dispatchNotification({\n          header: \"Успішно!\",\n          message: `Факультет створено.`,\n          type: \"ok\",\n        });\n        setUpdateList((prevState: any) => !prevState);\n        dispatch && dispatch({\n          type: \"POP_POPUP_WINDOW\",\n        });\n      } catch (e) {\n        console.log(e)\n        dispatchNotification({\n          header: \"Помилка!\",\n          message: `Щось пішло не так.`,\n          type: \"alert\",\n        });\n      }\n    }\n  };\n\n  return (\n    <form id='createFaculty' onSubmit={handleSubmit(onSubmit)}>\n      {errors.name && <span className={mainStyles.required}>Обов'язкове поле</span>}\n      <label>\n        Назва\n        <input className={mainStyles.input} type=\"text\"\n               defaultValue={item ? item?.name : undefined}\n               {...register(\"name\", {required: true})}/>\n      </label>\n    </form>\n  );\n}\n\nexport default CreateFacultyPopupBody;","import {gql} from \"@apollo/client\";\n\nexport const DELETE_FACULTY = gql`\n    mutation deleteOneFaculty($where: FacultyWhereUniqueInput!) {\n        deleteOneFaculty(where: $where) {\n            name\n        }\n    }\n`;","import React, {useEffect, useState} from 'react';\nimport Header from \"../../../components/header/Header\";\nimport Add from \"../../../components/icons/add/Add\";\nimport DataList from \"../../../components/dataList/DataList\";\nimport {usePopupWindow} from \"../../../components/popupWindow/PopupWindowProvider\";\nimport {useMutation} from \"@apollo/client\";\nimport {useNotification} from \"../../../components/notification/NotificationProvider\";\nimport {Faculty} from \"../../../models/models\";\nimport styles from \"../departments/adminDepartments.module.css\";\nimport Edit from \"../../../components/icons/edit/Edit\";\nimport Delete from \"../../../components/icons/delete/Delete\";\nimport useFaculties from \"../../../hooks/useFaculties\";\nimport Button from \"../../../components/button/Button\";\nimport CreateFacultyPopupBody from \"./createFacultyPopupBody/CreateFacultyPopupBody\";\nimport {DELETE_FACULTY} from \"../../../api/operations/mutations/deleteFaculty\";\n\nconst listHeader = ['ID', 'Назва'];\n\nconst AdminFaculties = () => {\n  const dispatchPopupWindow = usePopupWindow();\n  const [updateList, setUpdateList] = useState(false);\n  const faculties = useFaculties(updateList);\n  const [deleteFaculty] = useMutation(DELETE_FACULTY);\n  const dispatchNotification = useNotification();\n  const [listData, setListData] = useState<any>([]);\n  const dataItem = (item: Faculty) => <>\n    <span className={styles.centerText}>{item.id}</span>\n    <span>{item.name}</span>\n    <Edit dark onClick={() => handleAdd(item)}/>\n    <Delete onClick={() => handleDelete(item.id)}/>\n  </>;\n\n  useEffect(() => {\n    const data = faculties.map(item => dataItem(item));\n\n    setListData(data);\n  }, [faculties]);\n\n  const handleAdd = (item: Faculty | null = null) => {\n    dispatchPopupWindow({\n      header: <h1>{item ? 'Редагування факультету' : 'Створити факультет'}</h1>,\n      body: <CreateFacultyPopupBody setUpdateList={setUpdateList}\n                                       dispatchNotification={dispatchNotification} item={item}/>,\n      footer: <Button type='submit' form='createFaculty'>\n        {item ? 'Зберегти зміни' : 'Створити'}\n      </Button>\n    });\n  };\n\n  const handleDelete = async (id: number) => {\n    const confirm = window.confirm('Ви дійсно бажаєте видалити факультет?');\n\n    if (confirm) {\n      try {\n        await deleteFaculty({variables: {where: {id}}});\n        setUpdateList(prevState => !prevState);\n        dispatchNotification({\n          header: \"Успішно!\",\n          message: `Факультет видалено.`,\n          type: \"ok\",\n        });\n      } catch (e) {\n        console.log(e)\n        dispatchNotification({\n          header: \"Помилка!\",\n          message: `Щось пішло не так.`,\n          type: \"alert\",\n        });\n      }\n    }\n  };\n\n  return (\n    <div>\n      <Header>\n        <h1>Управління факультетами</h1>\n        <Add onClick={() => handleAdd()}/>\n      </Header>\n      <DataList header={listHeader} data={listData} gridTemplateColumns={'40px 1fr 40px 40px'}/>\n    </div>\n  );\n};\n\nexport default AdminFaculties;","import {gql} from \"@apollo/client\";\n\nexport const CREATE_DEGREE = gql`\n    mutation createOneDegree($data: DegreeCreateInput!) {\n        createOneDegree(data: $data) {\n            id\n            name\n        }\n    }\n`;","import {gql} from \"@apollo/client\";\n\nexport const UPDATE_DEGREE = gql`\n    mutation updateOneDegree($data: DegreeUpdateInput!, $where: DegreeWhereUniqueInput!) {\n        updateOneDegree(data: $data, where: $where) {\n            id\n            name\n        }\n    }\n`;","import React from 'react';\nimport mainStyles from '../../../../styles/main.module.css';\nimport {useMutation} from \"@apollo/client\";\nimport {useForm} from \"react-hook-form\";\nimport {Degree} from \"../../../../models/models\";\nimport {CREATE_DEGREE} from \"../../../../api/operations/mutations/createDegree\";\nimport {UPDATE_DEGREE} from \"../../../../api/operations/mutations/updateDegree\";\n\ninterface PropTypes {\n  setUpdateList: (value: any) => void;\n  dispatchNotification: (value: any) => void;\n  dispatch?: (value: any) => void;\n  item: Degree | null;\n  handleErrorDetails?: (error: any) => void;\n}\n\nconst CreateDegreePopupBody: React.FC<PropTypes> = ({setUpdateList, dispatchNotification, dispatch,\n    handleErrorDetails, item}) => {\n  const [createDegree] = useMutation(CREATE_DEGREE);\n  const [updateDegree] = useMutation(UPDATE_DEGREE);\n  const {register, handleSubmit, watch, formState: {errors}} = useForm<any>();\n\n  const onSubmit = async (e: any) => {\n    if (item) {\n      try {\n        await updateDegree({\n          variables: {\n            data: {\n              name: {set: e.name},\n              startMonth: {set: Number(e.startMonth)},\n              startDay: {set: Number(e.startDay)},\n              durationMonths: {set: Number(e.durationMonths)},\n            },\n            where: {\n              id: Number(item?.id)\n            }\n          }\n        });\n        dispatchNotification({\n          header: \"Успішно!\",\n          message: `Дані збережено.`,\n          type: \"ok\",\n        });\n        setUpdateList((prevState: any) => !prevState);\n        dispatch && dispatch({\n          type: \"POP_POPUP_WINDOW\",\n        });\n      } catch (e) {\n        console.log(e)\n        dispatchNotification({\n          header: \"Помилка!\",\n          message:  <><span>Щось пішло не так.</span><br/>\n            <span style={{color: '#2b5dff', cursor: 'pointer', textDecoration: 'underline' }}\n                  onClick={() => handleErrorDetails && handleErrorDetails(e)}>Деталі</span></>,\n          type: \"alert\",\n        });\n      }\n    } else {\n      try {\n        await createDegree({\n          variables: {\n            data: {\n              name: e.name,\n              startMonth: Number(e.startMonth),\n              startDay: Number(e.startDay),\n              durationMonths: Number(e.durationMonths),\n            }\n          }\n        });\n        dispatchNotification({\n          header: \"Успішно!\",\n          message: `Учбовий ступінь створено.`,\n          type: \"ok\",\n        });\n        setUpdateList((prevState: any) => !prevState);\n        dispatch && dispatch({\n          type: \"POP_POPUP_WINDOW\",\n        });\n      } catch (e) {\n        console.log(e)\n        dispatchNotification({\n          header: \"Помилка!\",\n          message:  <><span>Щось пішло не так.</span><br/>\n            <span style={{color: '#2b5dff', cursor: 'pointer', textDecoration: 'underline' }}\n                  onClick={() => handleErrorDetails && handleErrorDetails(e)}>Деталі</span></>,\n          type: \"alert\",\n        });\n      }\n    }\n  };\n\n  return (\n    <form id='createDegree' onSubmit={handleSubmit(onSubmit)}>\n      {errors.name && <span className={mainStyles.required}>Обов'язкове поле</span>}\n      <label>\n        Назва\n        <input className={mainStyles.input} type=\"text\"\n               defaultValue={item ? item?.name : undefined}\n               {...register(\"name\", {required: true})}/>\n      </label>\n      {errors.name && <span className={mainStyles.required}>Обов'язкове поле</span>}\n      <label>\n        Місяць початку\n        <input className={mainStyles.input} type=\"number\" min={1} max={12}\n               defaultValue={item ? item?.startMonth : 9}\n               {...register(\"startMonth\", {required: true})}/>\n      </label>\n      {errors.name && <span className={mainStyles.required}>Обов'язкове поле</span>}\n      <label>\n        День початку\n        <input className={mainStyles.input} type=\"number\" min={1} max={31}\n               defaultValue={item ? item?.startDay : 1}\n               {...register(\"startDay\", {required: true})}/>\n      </label>\n      {errors.name && <span className={mainStyles.required}>Обов'язкове поле</span>}\n      <label>\n        Триваліть (міс.)\n        <input className={mainStyles.input} type=\"number\" min={1}\n               defaultValue={item ? item?.durationMonths : 12}\n               {...register(\"durationMonths\", {required: true})}/>\n      </label>\n    </form>\n  );\n}\n\nexport default CreateDegreePopupBody;","import { gql } from \"@apollo/client\";\r\n\r\nexport const GET_DEGREES = gql`\r\n    query getDegrees {\r\n        degrees {\r\n            id\r\n            name\r\n            startMonth\r\n            startDay\r\n            durationMonths\r\n        }\r\n    }\r\n`;","import {useEffect, useState} from \"react\";\nimport {client} from \"../api/client\";\nimport {Degree} from \"../models/models\";\nimport {GET_DEGREES} from \"../api/operations/queries/degrees\";\n\nconst useDegrees = (updateList: boolean = false): Array<Degree> => {\n  const [degrees, setDegrees] = useState<Degree[]>([]);\n\n  useEffect(() => {\n    client.query({query: GET_DEGREES, variables: {\n      where: {\n      }\n      },\n      fetchPolicy: 'network-only'\n    }).then((data) => {\n      setDegrees(data.data.degrees\n          .slice().sort((a: Degree, b: Degree) => a.id - b.id));\n      });\n  }, [updateList]);\n\n  return degrees;\n};\n\nexport default useDegrees;","import {gql} from \"@apollo/client\";\n\nexport const DELETE_DEGREE = gql`\n    mutation deleteOneDegree($where: DegreeWhereUniqueInput!) {\n        deleteOneDegree(where: $where) {\n            name\n        }\n    }\n`;","import React, {useEffect, useState} from 'react';\nimport Header from \"../../../components/header/Header\";\nimport Add from \"../../../components/icons/add/Add\";\nimport DataList from \"../../../components/dataList/DataList\";\nimport {usePopupWindow} from \"../../../components/popupWindow/PopupWindowProvider\";\nimport {useMutation} from \"@apollo/client\";\nimport {useNotification} from \"../../../components/notification/NotificationProvider\";\nimport {Degree} from \"../../../models/models\";\nimport styles from \"../departments/adminDepartments.module.css\";\nimport Edit from \"../../../components/icons/edit/Edit\";\nimport Delete from \"../../../components/icons/delete/Delete\";\nimport Button from \"../../../components/button/Button\";\nimport CreateDegreePopupBody from \"./createDegreePopupBody/CreateDegreePopupBody\";\nimport useDegrees from \"../../../hooks/useDegrees\";\nimport {DELETE_DEGREE} from \"../../../api/operations/mutations/deleteDegree\";\n\nconst listHeader = ['ID', 'Назва'];\n\nconst AdminDegrees = () => {\n  const dispatchPopupWindow = usePopupWindow();\n  const [updateList, setUpdateList] = useState(false);\n  const degrees = useDegrees(updateList);\n  const [deleteFaculty] = useMutation(DELETE_DEGREE);\n  const dispatchNotification = useNotification();\n  const [listData, setListData] = useState<any>([]);\n  const dataItem = (item: Degree) => <>\n    <span className={styles.centerText}>{item.id}</span>\n    <span>{item.name}</span>\n    <Edit dark onClick={() => handleAdd(item)}/>\n    <Delete onClick={() => handleDelete(item.id)}/>\n  </>;\n\n  useEffect(() => {\n    const data = degrees.map(item => dataItem(item));\n\n    setListData(data);\n  }, [degrees]);\n\n  const handleErrorDetails = (e: any) => {\n    dispatchPopupWindow({\n      header: <h1>{e.name}</h1>,\n      body: <>\n        <p>{e.message}</p>\n        <p>{e.extraInfo}</p>\n        <pre>{e.stack}</pre>\n      </>,\n      footer: ''\n    });\n  };\n\n  const handleAdd = (item: Degree | null = null) => {\n    dispatchPopupWindow({\n      header: <h1>{item ? 'Редагування учбового ступеню' : 'Створити учбовий ступінь'}</h1>,\n      body: <CreateDegreePopupBody setUpdateList={setUpdateList} handleErrorDetails={handleErrorDetails}\n                                       dispatchNotification={dispatchNotification} item={item}/>,\n      footer: <Button type='submit' form='createDegree'>\n        {item ? 'Зберегти зміни' : 'Створити'}\n      </Button>\n    });\n  };\n\n  const handleDelete = async (id: number) => {\n    const confirm = window.confirm('Ви дійсно бажаєте видалити учбовий ступінь?');\n\n    if (confirm) {\n      try {\n        await deleteFaculty({variables: {where: {id}}});\n        setUpdateList(prevState => !prevState);\n        dispatchNotification({\n          header: \"Успішно!\",\n          message: `Учбовий ступінь видалено.`,\n          type: \"ok\",\n        });\n      } catch (e) {\n        console.log(e)\n        dispatchNotification({\n          header: \"Помилка!\",\n          message:  <><span>Щось пішло не так.</span><br/>\n            <span style={{color: '#2b5dff', cursor: 'pointer', textDecoration: 'underline' }}\n                  onClick={() => handleErrorDetails && handleErrorDetails(e)}>Деталі</span></>,\n          type: \"alert\",\n        });\n      }\n    }\n  };\n\n  return (\n    <div>\n      <Header>\n        <h1>Управління учбовими ступенями</h1>\n        <Add onClick={() => handleAdd()}/>\n      </Header>\n      <DataList header={listHeader} data={listData} gridTemplateColumns={'40px 1fr 40px 40px'}/>\n    </div>\n  );\n};\n\nexport default AdminDegrees;","import React from \"react\";\r\nimport styles from \"./content.module.css\";\r\nimport Home from \"../../../pages/home/Home\";\r\nimport { Route, Switch } from \"react-router-dom\";\r\nimport Registry from \"../../../pages/registry/Registry\";\r\nimport Schedule from \"../../../pages/schedule/Schedule\";\r\nimport Users from \"../../../pages/users/Users\";\r\nimport Profile from \"../../../pages/profile/Profile\";\r\nimport AdminClassrooms from \"../../../admin/pages/classrooms/AdminClassrooms\";\r\nimport AdminUsers from \"../../../admin/pages/users/AdminUsers\";\r\nimport Admin from \"../../../admin/pages/admin/Admin\";\r\nimport Classrooms from \"../../../pages/classrooms/Classrooms\";\r\nimport AdminInstruments from \"../../../admin/pages/instruments/AdminInstruments\";\r\nimport AdminDepartments from \"../../../admin/pages/departments/AdminDepartments\";\r\nimport AdminFaculties from \"../../../admin/pages/faculties/AdminFaculties\";\r\nimport AdminDegrees from \"../../../admin/pages/degrees/AdminDegrees\";\r\n\r\nconst Content = () => {\r\n  return (\r\n    <div className={styles.content}>\r\n      <Switch>\r\n        <Route exact path=\"/\" component={Home} />\r\n        <Route path=\"/classrooms/:classroomName?\" component={Classrooms} />\r\n        <Route path=\"/registry/:userId?\" component={Registry} />\r\n        <Route path=\"/schedule\" component={Schedule} />\r\n        <Route path=\"/users:userId?\" component={Users} />\r\n        <Route path=\"/profile\" component={Profile} />\r\n        <Route path=\"/admin\" component={Admin} />\r\n        <Route path=\"/adminClassrooms\" component={AdminClassrooms} />\r\n        <Route path=\"/adminUsers\" component={AdminUsers} />\r\n        <Route path=\"/adminInstruments\" component={AdminInstruments} />\r\n        <Route path=\"/adminDepartments\" component={AdminDepartments} />\r\n        <Route path=\"/adminFaculties\" component={AdminFaculties} />\r\n        <Route path=\"/adminDegrees\" component={AdminDegrees} />\r\n      </Switch>\r\n    </div>\r\n  );\r\n};\r\n\r\nexport default Content;\r\n","import React from \"react\";\r\nimport styles from \"./layout.module.css\";\r\nimport Sidebar from \"./sidebar/Sidebar\";\r\nimport Content from \"./content/Content\";\r\nimport { gql, useQuery } from \"@apollo/client\";\r\n\r\nconst Layout = () => {\r\n  const { data: isBlurred } = useQuery(gql`\r\n    query isBlurred {\r\n      isBlurred @client\r\n    }\r\n  `);\r\n  return (\r\n    <div\r\n      className={[\r\n        styles.layout,\r\n        isBlurred.isBlurred ? styles.blurred : \"\",\r\n      ].join(\" \")}\r\n    >\r\n      <nav>\r\n        <Sidebar />\r\n      </nav>\r\n      <main>\r\n        <Content />\r\n      </main>\r\n    </div>\r\n  );\r\n};\r\n\r\nexport default Layout;\r\n","import React, {useEffect} from 'react';\nimport './App.css';\nimport Layout from \"./components/layout/Layout\";\n\nfunction App() {\n\n  // @ts-ignore\n  useEffect(() => document.title = 'Auditorium', []);\n\n  return (\n    <Layout/>\n  );\n}\n\nexport default App;\n","import { ReportHandler } from 'web-vitals';\n\nconst reportWebVitals = (onPerfEntry?: ReportHandler) => {\n  if (onPerfEntry && onPerfEntry instanceof Function) {\n    import('web-vitals').then(({ getCLS, getFID, getFCP, getLCP, getTTFB }) => {\n      getCLS(onPerfEntry);\n      getFID(onPerfEntry);\n      getFCP(onPerfEntry);\n      getLCP(onPerfEntry);\n      getTTFB(onPerfEntry);\n    });\n  }\n};\n\nexport default reportWebVitals;\n","import React from \"react\";\nimport ReactDOM from \"react-dom\";\nimport \"./index.css\";\nimport App from \"./App\";\nimport reportWebVitals from \"./reportWebVitals\";\nimport { ApolloProvider } from \"@apollo/client\";\nimport { client } from \"./api/client\";\nimport PopupWindowProvider from \"./components/popupWindow/PopupWindowProvider\";\nimport NotificationProvider from \"./components/notification/NotificationProvider\";\nimport {BrowserRouter, HashRouter} from \"react-router-dom\";\n\nReactDOM.render(\n  <React.StrictMode>\n    <HashRouter>\n      <ApolloProvider client={client}>\n        <PopupWindowProvider>\n          <NotificationProvider>\n            <App />\n          </NotificationProvider>\n        </PopupWindowProvider>\n      </ApolloProvider>\n    </HashRouter>\n  </React.StrictMode>,\n  document.getElementById(\"root\")\n);\n\n// If you want to start measuring performance in your app, pass a function\n// to log results (for example: reportWebVitals(console.log))\n// or send to an analytics endpoint. Learn more: https://bit.ly/CRA-vitals\nreportWebVitals();\n"],"sourceRoot":""}